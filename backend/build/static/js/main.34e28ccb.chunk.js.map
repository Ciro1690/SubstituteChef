{"version":3,"sources":["components/api/api.js","components/utilities/utility.js","components/routes/UserContext.js","components/home/JobCard.js","components/home/CompanyCard.js","components/home/Map.js","components/home/CompanyList.js","assets/sub chef LOGO/Artboard 2.png","components/nav/NavBar.js","components/auth/Login.js","components/auth/UserSignup.js","components/companies/CompanySignup.js","components/routes/ProtectedRoute.js","components/user/UserProfile.js","components/companies/EditCompany.js","components/companies/CompaniesProfile.js","components/companies/Application.js","components/companies/CompaniesApplications.js","components/user/UserApplications.js","components/jobs/JobSignup.js","components/footer/Footer.js","assets/sub chef LOGO/Sub.Chef.LOGO1-01.jpg","components/routes/Routes.js","App.js","index.js"],"names":["BASE_URL","process","REACT_APP_BASE_URL","ChefApi","endpoint","data","method","console","log","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","this","request","res","username","user","companies","id","company","jobs","job","companyId","jobId","applied","status","editUser","currentUser","formData","a","success","errors","editCompany","registerJob","signUpJob","registerCompany","signUpCompany","getJobsForCompany","formatDate","date","dateArr","split","year","month","day","substring","UserContext","React","createContext","JobCard","useContext","useState","setApplied","handleClick","getUserInfo","userInfo","applications","applyToJob","newJobId","includes","alert","position","useEffect","length","getApplications","className","hourly_pay","Button","variant","color","onClick","CompanyCard","setClickedCompany","clickedCompany","setJobs","isLoading","setIsLoading","name","address","lat","lng","jobList","getJobs","directions","href","target","rel","map","require","config","Map","googleMapsApiKey","REACT_APP_API_KEY","mapContainerStyle","height","width","zoom","center","labelInBackground","label","CompanyList","setCompanies","isLoaded","setIsLoaded","getAllCompanies","getCompanies","Grid","container","spacing","item","xs","md","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","nested","paddingLeft","title","headerOptions","display","flex","justifyContent","withRouter","props","history","LogOut","classes","anchorEl","setAnchorEl","open","Boolean","localStorage","getItem","handleMenuClick","pageURL","push","openList","setOpenList","companyOpenList","setCompanyOpenList","AppBar","Toolbar","Typography","edge","menuButton","src","logo","alt","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","ListItem","ListItemText","inset","primary","menuTitle","menuItem","Login","LogIn","INITIAL_DATA","password","setFormData","setErrors","useHistory","handleSubmit","e","preventDefault","LoginData","result","handleChange","value","onSubmit","TextField","required","type","onChange","UserSignup","registerUser","firstName","lastName","email","registerData","checked","CompanySignup","ProtectedRoute","exact","path","children","to","UserProfile","setUserInfo","editData","then","NEW_STATE","deleteUser","deleted","Box","m","p","ButtonGroup","size","startIcon","EditCompany","deleteCompany","CompaniesProfile","getCompaniesFromUsername","userCompanies","Application","applicant","acceptApplicant","denyApplicant","decided","CompaniesApplications","setDecided","applicationsArr","companyApplications","updateApplication","deleteJob","UserApplications","setApplications","jobApps","getJob","getCompany","company_id","application","JobSignUp","hourlyPay","companyList","InputLabel","Select","displayEmpty","min","InputLabelProps","shrink","Footer","Routes","setToken","setCurrentUser","Signup","setItem","removeItem","jwt","decode","getCurrentUser","Provider","NavBar","JobSignup","createMuiTheme","palette","main","secondary","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34e28ccb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nclass ChefApi {\n\n    static token;\n\n    static async request(endpoint, data = {}, method = \"get\") {\n        console.log(\"API Call:\", endpoint, data, method);\n\n        //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n        //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n        const url = `${BASE_URL}/${endpoint}`;\n        const headers = { Authorization: `Bearer ${ChefApi.token}` };\n        const params = (method === \"get\")\n            ? data\n            : {};\n\n        try {\n        return (await axios({ url, method, data, params, headers })).data;\n        } catch (err) {\n        console.error(\"API Error:\", err.response);\n        let message = err.response.data.error.message;\n        throw Array.isArray(message) ? message : [message];\n        }\n    }\n\n/**\n * User api methods\n */\n\n    static async Signup(data) {\n        let res = await this.request(`auth/signup`, data, \"post\");\n        return res.token;\n    }\n\n    static async Login(data) {\n        let res = await this.request(`auth/login`, data, \"post\");\n        return res.token;\n    }\n\n    static async getUserInfo(username) {\n        let res = await this.request(`users/${username}`);\n        return res.user;\n    }\n\n    static async editUser(username, data) {\n        let res = await this.request(`users/${username}`, data, \"patch\");\n        return res.user;\n    }\n\n    static async deleteUser(username) {\n        let res = await this.request(`users/${username}`, {}, \"delete\");\n        return res;\n    }\n\n/**\n* Company api methods\n*/\n \n    static async getAllCompanies() {\n            let res = await this.request(\"companies\");\n            return res.companies;\n        }\n\n    static async getCompany(id) {\n            let res = await this.request(`companies/${id}`);\n            return res.company;\n        }\n\n    static async getCompaniesFromUsername(username) {\n        let res = await this.request(`companies/username/${username}`);\n        return res;\n    }\n\n    static async signUpCompany(data) {\n        let res = await this.request(`companies/signup`, data, \"post\");\n        return res;\n    }\n\n    static async editCompany(id, data) {\n        let res = await this.request(`companies/${id}`, data, \"patch\");\n        return res.company;\n    }\n\n    static async deleteCompany(id) {\n        let res = await this.request(`companies/${id}`, {}, \"delete\");\n        return res;\n    }\n\n/**\n* Job api methods\n*/\n \n    static async getAllJobs() {\n            let res = await this.request(\"jobs\");\n            return res.jobs;\n        }\n\n    static async getJob(id) {\n            let res = await this.request(`jobs/${id}`);\n            return res.job;\n        }\n\n    static async getJobsForCompany(companyId) {\n            let res = await this.request(`jobs/company/${companyId}`);\n            return res.jobs;\n        }\n\n    static async signUpJob(data) {\n        let res = await this.request(`jobs/new`, data, \"post\");\n        return res;\n    }\n\n    static async editJob(id, data) {\n        let res = await this.request(`jobs/${id}`, data, \"patch\");\n        return res.job;\n    }\n\n    static async deleteJob(id) {\n        let res = await this.request(`jobs/${id}`, {}, \"delete\");\n        return res;\n    }\n\n    static async applyToJob(username, jobId) {\n        let res = await this.request(`users/${username}/jobs/${jobId}`, jobId, \"post\");\n        return res.applied;\n    }\n\n    static async updateApplication(username, jobId, status) {\n        let res = await this.request(`users/${username}/jobs/${jobId}`, status, \"patch\");\n        return res.status;\n    }\n }\n\nChefApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n    \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n    \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default ChefApi;","import ChefApi from '../api/api';\n\n\nexport async function editUser(currentUser, formData) {\n    try {\n        const user = await ChefApi.editUser(currentUser, formData);\n        return {success: true, user}\n    }\n    catch (err) {\n        return {success: false, errors: err}\n    }\n}\n\nexport async function editCompany(companyId, formData) {\n    try {\n        const company = await ChefApi.editCompany(companyId, formData);\n        return {success: true, company}\n    }\n    catch (err) {\n        return {success: false, errors: err}\n    }\n}\n\nexport async function registerJob (formData) {\n    try {\n        const job = await ChefApi.signUpJob(formData)\n        return {success: true, job}\n    } catch (err) {\n        return {success: false, errors: err}\n    }\n}\n\nexport async function registerCompany (formData) {\n    try {\n        await ChefApi.signUpCompany(formData)\n        return {success: true}\n    } catch (err) {\n        return {success: false, errors: err}\n    }\n}\n\nexport async function getCompaniesFromUsername (formData) {\n    try {\n        await ChefApi.getCompaniesFromUsername(formData)\n        return {success: true}\n    } catch (err) {\n        return {success: false, errors: err}\n    }\n}\n\nexport async function getJobsForCompany (formData) {\n    try {\n        const jobs = await ChefApi.getJobsForCompany(formData)\n        return {success: true, jobs}\n    } catch (err) {\n        return {success: false, errors: err}\n    }\n}\n\nexport function formatDate(date) {\n        let dateArr = date.split(\"-\")\n        let year = dateArr[0];\n        let month = dateArr[1];\n        let day = dateArr[2].substring(0,2);\n        return `${month}/${day}/${year}`\n}","import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { useContext, useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core'; \nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\n\nconst JobCard = ({ job }) => {\n    const { currentUser } = useContext(UserContext);\n    const [applied, setApplied] = useState(false);\n\n        const handleClick = async () => {\n            const userInfo = await ChefApi.getUserInfo(currentUser)\n            const applications = userInfo.applications\n            const newJobId = await ChefApi.applyToJob(currentUser, job.id)\n        if (!applications.includes(newJobId)) {\n            setApplied(true)\n            alert(`Applied to ${job.position}`)\n        }\n    }\n    \n    useEffect(() => {\n        async function getApplications() {\n            const userInfo = await ChefApi.getUserInfo(currentUser)\n            if (userInfo.applications.length > 0 && userInfo.applications[0].includes(job.id)) {\n                setApplied(true)\n            }\n        }\n        getApplications()\n    }, [currentUser, job.id])\n    \n\n    return (\n        <div className=\"col text-center\">\n            <h4>{job.position}</h4>\n            <h4>${job.hourly_pay}/hour</h4>\n            <h4>{formatDate(job.date)}</h4>\n            {applied ?\n            <Button variant=\"contained\" color=\"primary\">Applied</Button>\n            :\n            <Button onClick={handleClick} variant=\"contained\" color=\"secondary\">Apply</Button>\n            }\n        </div> \n    )\n}\n\nexport default JobCard;","import React, { useState, useEffect, useContext } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport UserContext from '../routes/UserContext';\nimport '../../styles/CompanyCard.css';\n\nconst CompanyCard = ({ company, setClickedCompany, clickedCompany }) => {\n    const currentUser = useContext(UserContext);\n    const [jobs, setJobs] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { id, name, url, address, lat, lng } = company;\n\n    useEffect(() => {\n        async function getJobs() {\n            let jobList = await getJobsForCompany(id);\n            if (jobList.success) {\n                setJobs(jobList.jobs);\n            } \n            setIsLoading(false);\n        }\n        getJobs();\n    }, [id]);\n\n    const directions = `https://www.google.com/maps/dir/?api=1&travelmode=driving&layer=traffic&destination=${lat},${lng}`\n\n    const setCompany = () => {\n        setClickedCompany(company)\n    }\n\n    if (isLoading) {\n        return <p>Loading</p>\n    }\n\n    return (\n        <div className=\"company-card container\">\n            <div onClick={setCompany} className={clickedCompany.name === name ? \"selected-card row\" : \"inner-card row\"}>\n                <div className=\"company-info text-center col\">\n                    <h1>{name}</h1>\n                    <h2>{address}</h2>\n                    <h4><a href={url} target=\"blank\">{url}</a></h4>\n                    <h4><a href={directions} rel=\"noreferrer\" target=\"_blank\">Get Directions</a></h4>\n                </div>\n                {currentUser.currentUser == null ? null \n                :\n                <div className=\"company-info col\">\n                    <h2 className=\"text-center\">Jobs</h2>\n                    <div className=\"row\">\n                    {jobs.length > 0 ? jobs.map(job => (\n                        <JobCard key={job.id} job={job}/>\n                    )) : <h4 className=\"text-center\">No jobs to display</h4>}\n                    </div>\n                </div>\n                 }\n            </div>\n        </div> \n    )\n}\n\nexport default CompanyCard;","import React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nrequire('dotenv').config()\n\nconst Map = ({ companies, clickedCompany, setClickedCompany }) => {\n\n    const location = {lat: 32.74544, lng: -117.14369}\n    const mapStyles = {\n        height: \"70vh\",\n        width: \"100%\"\n    }\n\n    const handleClick = (company) => {\n        setClickedCompany(company)\n    }\n\n    return (\n            <LoadScript\n                googleMapsApiKey= {process.env.REACT_APP_API_KEY}>\n            <GoogleMap\n                mapContainerStyle = { mapStyles }\n                zoom = { 12 }\n                center = { location } \n            >\n\n            {companies.map(company => (\n                <Marker key={company.id}\n                    position={{lat: company.lat, lng: company.lng}}\n                    labelInBackground={true}\n                    label={clickedCompany.id === company.id ? company.name : null}\n                    onClick={() => handleClick(company)}\n                />\n                ))\n            })\n            </GoogleMap >\n            </LoadScript>\n    )\n}\n\nexport default Map;","import React, { useEffect, useState } from 'react';\nimport CompanyCard from './CompanyCard';\nimport ChefApi from '../api/api';\nimport Map from './Map';\nimport { Grid } from '@material-ui/core';\nimport '../../styles/CompanyCard.css';\n\nconst CompanyList = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [clickedCompany, setClickedCompany] = useState({});\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        async function getCompanies() {\n            let companies = await ChefApi.getAllCompanies();\n            setCompanies(companies);\n            setIsLoaded(true);\n        }\n        getCompanies();\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <div className=\"company-list\">\n                    {!isLoaded ? <div>Loading...</div> : null}\n                    {companies.map(company => (\n                        <CompanyCard\n                            key={company.id}\n                            company={company}\n                            clickedCompany={clickedCompany}\n                            setClickedCompany={setClickedCompany}\n                        />\n                    ))} \n                </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Map \n                        companies={companies}\n                        clickedCompany={clickedCompany}\n                        setClickedCompany={setClickedCompany}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default CompanyList;","export default __webpack_public_path__ + \"static/media/Artboard 2.7fd2002f.png\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from \"../../assets/sub chef LOGO/Artboard 2.png\";\nimport AppBar from '@material-ui/core/AppBar';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { Menu, \n        List,\n        ListItem,\n        ListItemText,\n        Collapse,\n        MenuItem,\n        IconButton,\n        Typography,\n        Toolbar } from '@material-ui/core';\nimport { ExpandMore,\n         ExpandLess } from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport '../../styles/Navbar.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    flexGrow: 1,\n    backgroundColor: \"#e9e9e9\"\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  title: {\n        flexGrow: 1,\n  },\n  headerOptions: {\n      display: \"flex\",\n      flex: 1,\n      justifyContent: \"space-evenly\"\n  }\n}));\n\nconst Header = (props) => {\n  const { history } = props;\n  const { LogOut } = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const token = localStorage.getItem('token');\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClick = (pageURL) => {\n    history.push(pageURL);\n    setAnchorEl(null);\n  };\n\n  const loggedOutMenuItems = [\n      {\n          menuTitle: 'Log in',\n          pageURL: '/login'\n      },\n      {\n          menuTitle: 'Sign up',\n          pageURL: '/signup'\n      }\n  ]\n\n    const [openList, setOpenList] = useState(false);\n    const handleClick = () => {\n      setOpenList(!openList);\n    };\n    const [companyOpenList, setCompanyOpenList] = useState(false);\n    const handleCompanyClick = () => {\n      setCompanyOpenList(!companyOpenList);\n    };\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar className=\"mb-4\" position=\"static\" color=\"transparent\">\n        <Toolbar>\n          <Typography edge=\"start\" className={classes.menuButton} color=\"inherit\">\n            <a href=\"/\"><img className=\"logo\" src={logo} alt=\"logo\"/></a>\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n              Find Jobs, Get Paid\n          </Typography>\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={() => setAnchorEl(null)}\n              >\n            {token ? \n            <div>\n                <MenuItem button onClick={handleClick}>User\n                  {openList ? <ExpandLess /> : <ExpandMore />}\n                  <Collapse in={openList} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      <ListItem button\n                        className={classes.nested}\n                        onClick={() => handleMenuClick('/userprofile')}>\n                          <ListItemText inset primary=\"Edit User\" />\n                      </ListItem>\n                      <ListItem button\n                        className={classes.nested}\n                        onClick={() => handleMenuClick('/userapplications')}>\n                          <ListItemText inset primary=\"Applications\" />\n                      </ListItem>\n                    </List>\n                  </Collapse>\n                </MenuItem>\n                <MenuItem button onClick={handleCompanyClick}>Companies\n                  {companyOpenList ? <ExpandLess /> : <ExpandMore />}\n                  <Collapse in={companyOpenList} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      <ListItem button\n                        className={classes.nested}\n                        onClick={() => handleMenuClick('/companyprofile')}>\n                          <ListItemText inset primary=\"Edit Companies\" />\n                      </ListItem>\n                      <ListItem button\n                        className={classes.nested}\n                        onClick={() => handleMenuClick('/companiesapplications')}>\n                          <ListItemText inset primary=\"Applications\" />\n                      </ListItem>\n                      <ListItem button\n                        className={classes.nested}\n                        onClick={() => handleMenuClick('/company')}>\n                          <ListItemText inset primary=\"Create New Company\" />\n                      </ListItem>\n                      <ListItem button\n                        className={classes.nested}\n                        onClick={() => handleMenuClick('/job')}>\n                          <ListItemText inset primary=\"Post a Job\" />\n                      </ListItem>\n                    </List>\n                  </Collapse>\n                </MenuItem>\n                <MenuItem onClick={() => LogOut()}>Logout</MenuItem>\n            </div>        \n                : loggedOutMenuItems.map(menuItem => {\n                    const { menuTitle, pageURL } = menuItem;\n                    return (\n                        <MenuItem onClick={() => handleMenuClick(pageURL)}>{menuTitle}</MenuItem>\n                        )\n                })\n            }\n              </Menu>\n            </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withRouter(Header);","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core'; \n\nconst Login = ({LogIn}) => {\n    const INITIAL_DATA = {\n        username: \"\",\n        password: \"\", \n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const LoginData = {\n            \"username\": formData.username,\n            \"password\":formData.password           \n        };\n        const result = await LogIn(LoginData)\n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n            <h1>Welcome back!</h1>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={formData.username}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={formData.password}/>\n                    <br></br><br></br>\n                {errors.length ?\n                    <p>{errors}</p>\n                : null }\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\" \n                    color=\"primary\">Login</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\n\nconst UserSignup = ({ registerUser }) => {\n    const INITIAL_DATA = {\n        username: \"\",\n        password: \"\", \n        firstName: \"\", \n        lastName: \"\", \n        email: \"\"\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"username\": formData.username,\n            \"password\":formData.password,\n            \"firstName\": formData.firstName,\n            \"lastName\": formData.lastName,\n            \"email\": formData.email\n        };\n        const result = await registerUser(registerData)\n        \n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Created account for Substitute Chef\")\n            history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"register-div\">\n            <h1>Welcome to Substitute Chef!</h1>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={formData.username}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={formData.password}/>\n                <br></br>\n                <TextField\n                    required\n                    label=\"First Name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    onChange={handleChange}\n                    value={formData.firstName}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    onChange={handleChange}\n                    value={formData.lastName}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={formData.email}/>\n                    <br></br><br></br>\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\" \n                    color=\"primary\">Sign Up</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default UserSignup;","import React, { useState } from 'react';\nimport { registerCompany } from '../utilities/utility';\nimport { useHistory } from 'react-router';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\n\nconst CompanySignup = ({ currentUser }) => {\n    const INITIAL_DATA = {\n        name: \"\",\n        url: \"\", \n        address: \"\"\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState({});\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"name\": formData.name,\n            \"url\":formData.url,\n            \"address\": formData.address,\n            \"username\": currentUser           \n        };\n        const result = await registerCompany(registerData)\n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Added new company\")\n            history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n            <h1>Register Company</h1>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    label=\"Company name\"\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={handleChange}\n                    value={formData.name}/>\n                <br></br>\n                <TextField\n                    required\n                    label=\"URL\"\n                    type=\"text\"\n                    name=\"url\"\n                    onChange={handleChange}\n                    value={formData.url}/>\n                <br></br>\n                <TextField\n                    required\n                    label=\"Address\"\n                    type=\"text\"\n                    name=\"address\"\n                    onChange={handleChange}\n                    value={formData.address}/>\n                <br></br>\n                <br></br>\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\" \n                    color=\"secondary\">Create Company</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default CompanySignup;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({exact, path, children}) => {\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n        return <Redirect to='/login' />\n    }\n\n    else {\n        return (\n            <Route exact={exact} path={path}>\n                {children}\n            </Route>\n        )\n    }\n}\n\nexport default ProtectedRoute;","import React, { useState, useContext, useEffect } from 'react';\nimport { editUser } from '../utilities/utility';\nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { useHistory } from 'react-router';\nimport {\n    TextField,\n    Button,\n    ButtonGroup } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nconst UserProfile = ({ setUserInfo, LogOut }) => {\n\n    const { userInfo } = useContext(UserContext);\n    const [formData, setFormData] = useState(null);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n    \n    useEffect(() => {\n        if (userInfo !== null) {\n            setFormData({\n                firstName: userInfo.firstName,\n                lastName: userInfo.lastName,\n                email: userInfo.email\n            });\n        }\n    }, [userInfo])\n    \n    const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n        \"firstName\": formData.firstName,\n        \"lastName\": formData.lastName,\n        \"email\": formData.email\n    };\n    await editUser(userInfo.username, editData)\n        .then((res) => {\n            if (res.success) {\n                const NEW_STATE = {\n                    \"firstName\": res.user.firstName,\n                    \"lastName\": res.user.lastName,\n                    \"email\": res.user.email\n                }\n                setUserInfo(data => ({\n                    ...data,\n                    ...NEW_STATE\n                }))\n                alert(\"Updated user info\")\n            }\n            else {\n                setErrors(res.errors);\n            }\n        })\n    }\n\n    const deleteUser = async () => {\n        try {\n            const user = await ChefApi.deleteUser(userInfo.username)\n            alert(`Deleted ${user.deleted}. Sorry to see you go!`)\n            LogOut()\n            history.push('/')\n        }\n        catch (err) {\n            console.log(err)\n            setErrors(`Unable to delete ${userInfo.username}`)\n        }\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"mt-3\">\n        {formData === null  ? <p>Loading...</p> :\n            <div>\n                <h1>Edit User Profile</h1>\n                <form onSubmit={handleSubmit}>\n                    <TextField\n                        label=\"First Name\"\n                        type=\"text\"\n                        name=\"firstName\"\n                        onChange={handleChange}\n                        value={formData.firstName}/>\n                        <br></br>\n                    <TextField\n                        label=\"Last Name\"\n                        type=\"text\"\n                        name=\"lastName\"\n                        onChange={handleChange}\n                        value={formData.lastName}/>\n                        <br></br>\n                    <TextField\n                        label=\"Email\"\n                        type=\"email\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        value={formData.email}/>\n                    <Box m={2} p={3}>\n                        <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n                            <Button \n                                type=\"submit\"\n                                variant=\"contained\" \n                                color=\"secondary\"\n                                className=\"btn mr-2\"\n                                startIcon={<SaveIcon />}>\n                                Edit Account\n                            </Button>                    \n                            <Button \n                                onClick={deleteUser}\n                                variant=\"contained\" \n                                color=\"primary\"\n                                startIcon={<DeleteIcon />}>\n                                Delete Account\n                            </Button>\n                        </ButtonGroup>\n                    </Box>\n                </form>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                        : null }\n                </div>\n            </div>\n        }\n        </div>\n    )\n}\n\nexport default UserProfile;","import React, { useEffect, useState } from 'react';\nimport {\n    TextField,\n    Button,\n    ButtonGroup } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ChefApi from '../api/api';\nimport { useHistory } from 'react-router';\nimport { editCompany } from '../utilities/utility';\n\nconst EditCompany = ({ company }) => {\n    const { id, name, address, url } = company\n    const [formData, setFormData] = useState(null);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n    \n    useEffect(() => {\n        if (company !== null) {\n            setFormData({\n                name: name,\n                url: url,\n                address: address,\n            });\n        }\n    }, [company, name, url, address])\n\n    \n    const handleSubmit = async e => {\n        e.preventDefault();\n        const editData = {\n            \"name\": formData.name,\n            \"address\": formData.address,\n            \"url\": formData.url,\n        };\n        await editCompany(id, editData)\n            .then((res) => {\n                if (res.success) {\n                    const NEW_STATE = {\n                        \"name\": res.company.name,\n                        \"address\": res.company.address,\n                        \"url\": res.company.url\n                    }\n                    setFormData(data => ({\n                        ...data,\n                        ...NEW_STATE\n                    }))\n                    alert(\"Updated company info\")\n                }\n                else {\n                    setErrors(res.errors);\n                }\n         })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    const deleteCompany = async () => {\n        try {\n            await ChefApi.deleteCompany(id)\n            alert(`Deleted company. Sorry to see you go!`)\n            history.push('/')\n        }\n        catch (err) {\n            console.log(err)\n            setErrors(`Unable to delete company`)\n        }\n    }\n\n    return (\n        <div className=\"col border rounded mt-3\">\n        {formData === null  ? <p>Loading...</p> :\n            <div>\n                <h2>{name}</h2>\n                <form onSubmit={handleSubmit}>\n                    <TextField\n                        label=\"name\"\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={handleChange}\n                        value={formData.name}/>\n                    <br></br>\n                    <TextField\n                        label=\"URL\"\n                        type=\"text\"\n                        name=\"url\"\n                        onChange={handleChange}\n                        value={formData.url}/>\n                        <br></br>\n                    <TextField\n                        label=\"Address\"\n                        type=\"text\"\n                        name=\"address\"\n                        onChange={handleChange}\n                        value={formData.address}/>\n                    <Box m={2} p={3}>\n                        <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n                            <Button \n                                type=\"submit\"\n                                variant=\"contained\" \n                                color=\"secondary\"\n                                className=\"btn mr-2\"\n                                startIcon={<SaveIcon />}>\n                                Edit Company\n                            </Button>                    \n                            <Button \n                                onClick={deleteCompany}\n                                variant=\"contained\" \n                                color=\"primary\"\n                                startIcon={<DeleteIcon />}>\n                                Delete Company\n                            </Button>\n                        </ButtonGroup>\n                    </Box>\n                </form>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                        : null }\n                </div>\n            </div>\n        }\n        </div>\n    )\n}\n\nexport default EditCompany;","import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport EditCompany from './EditCompany';\n\nconst CompaniesProfile = ({ currentUser }) => {\n    const [companies, setCompanies] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    \n    useEffect(() => {\n        async function getCompanies() { \n            const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n            setCompanies(userCompanies.companies);\n            setIsLoading(false); \n        }\n        if (isLoading && currentUser !== null) {\n            getCompanies()\n        }\n    }, [currentUser, isLoading])\n    \n    return (\n        isLoading ? <div>Loading...</div> :\n        <div className=\"container mt-3\">\n            <h1>Edit Companies</h1>\n            <div className=\"row\">\n                {companies.map(company => (\n                    <EditCompany key={company.id} company={company}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default CompaniesProfile;","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst Application = ({applicant, job, acceptApplicant, denyApplicant, decided}) => {\n    return (\n        <div>\n            <h4>{applicant[1]} - {applicant[2]}</h4>\n            {applicant[2] === \"PENDING\" && !decided ?\n            <div>\n                <Button onClick={acceptApplicant([applicant[1], job.id])} color=\"secondary\">Accept</Button>\n                <Button onClick={denyApplicant([applicant[1], job.id])} color=\"primary\">Deny</Button>\n            </div>\n            : null }\n            <br></br>\n        </div>         \n        )\n}\n\nexport default Application;\n","import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport { Button } from '@material-ui/core';\nimport { formatDate } from '../utilities/utility'; \nimport Application from './Application';\n\nconst CompaniesApplications = ({currentUser}) => {\n    const [companies, setCompanies] = useState(null);\n    const [decided, setDecided] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errors, setErrors] = useState([]);\n\n    useEffect(() => {\n        async function getApplications() { \n            let applicationsArr = []\n            const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n            for (let company of userCompanies.companies) {\n                const companyApplications = await ChefApi.getJobsForCompany(company.id)\n                applicationsArr.push([company, companyApplications])\n            }\n            setCompanies(applicationsArr);\n            setIsLoading(false);\n            setDecided(false);\n        }\n        if (isLoading && currentUser !== null) {\n            getApplications()\n        }\n    }, [decided, currentUser, isLoading])\n\n\n    const acceptApplicant = ([username, jobId]) => async (e) => {\n        const status = await ChefApi.updateApplication(username, jobId, {status: \"APPROVED\"})\n        setDecided(true)\n        alert(`You have ${status} this job`)\n    }\n\n    const denyApplicant = ([username, jobId]) => async (e) => {\n        const status = await ChefApi.updateApplication(username, jobId, {status: \"DENIED\"})\n        setDecided(true)\n        alert(`You have ${status} this job`)    \n    }\n\n     const deleteJob = async (id) => {\n        try {\n            await ChefApi.deleteJob(id)\n            alert(`Deleted job`)\n        }\n        catch (err) {\n            console.log(err)\n            setErrors(`Unable to delete job`)\n        }\n    }\n\n    return (\n        !isLoading && companies.length > 0 ?\n        <div className=\"container mt-3\">\n            <h1>Open Applications</h1>\n            <br></br>\n            <div className=\"row applications-ul\">\n                {companies.map(company => (\n                    <div className=\"col border\" key={company[0].id}>\n                        <h1>{company[0].name}</h1>\n                        <h2>{company[0].address}</h2>\n                        <h2><a href={company[0].url} target=\"blank\">{company[0].url}</a></h2>\n                        <br></br>\n                        <div className=\"row\">                           \n                        {company[1].length > 0 ?\n                            company[1].map(job => (\n                                <div className=\"col\" key={job.id}>\n                                        <h2>Job Posting</h2>   \n                                        <h4>{job.position}</h4>\n                                        <h4>${job.hourly_pay}/hour</h4>\n                                        <h4>{formatDate(job.date)}</h4>\n                                    {job.applications.length > 0 ?\n                                        job.applications.map(applicant => (\n                                            <Application \n                                            key={applicant[1]}\n                                            applicant={applicant} \n                                            job={job}\n                                            acceptApplicant={acceptApplicant}\n                                            denyApplicant={denyApplicant}\n                                            decided={decided}\n                                            />\n                                            ))\n                                            : <h4>No applicants</h4> }\n                                    <Button \n                                        className=\"mb-3\"\n                                        onClick={() => deleteJob(job.id)}\n                                        variant=\"contained\" \n                                        color=\"primary\">\n                                        Remove Posting\n                                    </Button>\n                                    <div>\n                                    {errors.length ?\n                                        <p>{errors}</p>\n                                    : null }\n                                    </div>\n                                </div>\n                                ))\n                            : <h4>No applications to display</h4>}\n                         </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n        : \n        <h1>Currently no applications to display</h1>\n    )\n}\n\nexport default CompaniesApplications;","import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility'; \n\nconst UserApplications = ({currentUser}) => {\n    const [applications, setApplications] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        async function getApplications() {\n            const jobApps = [];\n            try {\n                const userInfo = await ChefApi.getUserInfo(currentUser)\n                    for (let [jobId, status] of userInfo.applications) {\n                        const job = await ChefApi.getJob(jobId);\n                        let company = await ChefApi.getCompany(job.company_id)\n                        jobApps.push({ job, status, company });\n                    }\n                    setApplications(jobApps)\n                    setIsLoaded(true);\n\n            }\n            catch (err) {\n                console.log(err)\n            }\n        }\n        getApplications();\n    }, [currentUser]);\n\n    return (\n        applications.length > 0 ?\n        <div className=\"mt-3\">\n            <h1>Current Applications</h1>\n            <div className=\"container border mt-5\">\n                {!isLoaded ? <div>Loading...</div> : null}\n                <div className=\"row\">\n                    {applications.map(application => (\n                        <div className=\"col border\" key={application.job.id}>\n                            <h1>{application.company.name}</h1>\n                            <h4>{application.company.address}</h4>\n                            <h4><a href={application.company.url}>{application.company.url}</a></h4>\n                            <h2>Application</h2>\n                            <h4>{application.job.position}</h4>\n                            <h4>${application.job.hourly_pay}/hour</h4>\n                            <h4>{formatDate(application.job.date)}</h4>\n                            <h4>{application.status}</h4>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n        : \n        <h1>Apply to jobs to view applications</h1>\n    )\n}\n\nexport default UserApplications;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { registerJob } from '../utilities/utility';\nimport {\n    TextField,\n    MenuItem,\n    Select,\n    InputLabel,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\nimport ChefApi from '../api/api';\n\nconst JobSignUp = ({ currentUser }) => {\n\n    const INITIAL_DATA = {\n        position: \"\",\n        hourlyPay: \"\", \n        date: \"\",\n        companyId: \"\"\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    const [companies, setCompanies] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    let history = useHistory();\n\n    useEffect(() => {\n        async function getCompanies() {\n            let companyList = await ChefApi.getCompaniesFromUsername(currentUser);\n            setCompanies(companyList.companies);\n            setIsLoaded(true);\n        }\n        getCompanies();\n    }, [currentUser]);\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"position\": formData.position,\n            \"hourlyPay\":formData.hourlyPay,\n            \"date\": formData.date,\n            \"companyId\": formData.companyId         \n        };\n        const result = await registerJob(registerData)\n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Added new job\")\n            history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        companies.length > 0 ? \n        <div>\n            <h1>Post a Job</h1>\n            {!isLoaded ? <div>Loading...</div> : null}\n            <form onSubmit={handleSubmit}>\n                <InputLabel>Company</InputLabel>\n                <Select\n                    required\n                    displayEmpty\n                    label=\"Company\"\n                    name=\"companyId\" \n                    value={formData.companyId} \n                    onChange={handleChange}>\n                    {companies.map(company => (\n                        <MenuItem value={company.id} key={company.id}>{company.name}</MenuItem>\n                    ))}\n                </Select>\n                <br></br>\n                <TextField\n                    required\n                    label=\"Position\"\n                    type=\"text\"\n                    name=\"position\"\n                    onChange={handleChange}\n                    value={formData.position}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Hourly Pay\"\n                    type=\"number\"\n                    min=\"14\"\n                    name=\"hourlyPay\"\n                    onChange={handleChange}\n                    value={formData.hourlyPay}/>\n                    <br></br>\n                <TextField\n                    required\n                    type=\"date\"\n                    label=\"Date\"\n                    name=\"date\"\n                    onChange={handleChange}\n                    value={formData.date}\n                    InputLabelProps={{\n                        shrink: true,\n                }}/>\n                <br></br><br></br>\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\" \n                    color=\"secondary\"\n                >Post Job</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </form>\n        </div>\n        :\n        <h1>Register a company to post a job</h1>\n    )\n}\n\nexport default JobSignUp;","import React from 'react';\nimport '../../styles/Footer.css';\n\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer-options col\">\n                <h5>© Substitute Chef, 2021</h5> \n            </div>\n        </div>\n    )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/Sub.Chef.LOGO1-01.11983310.jpg\";","import React, {useEffect, useState} from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport CompanyList from '../home/CompanyList';\nimport NavBar from '../nav/NavBar';\nimport Login from '../auth/Login';\nimport UserSignup from '../auth/UserSignup';\nimport CompanySignup from '../companies/CompanySignup';\nimport UserContext from \"./UserContext\";\nimport ProtectedRoute from './ProtectedRoute';\nimport UserProfile from '../user/UserProfile';\nimport CompaniesProfile from '../companies/CompaniesProfile';\nimport CompaniesApplications from '../companies/CompaniesApplications';\nimport UserApplications from '../user/UserApplications';\nimport JobSignup from '../jobs/JobSignup';\nimport ChefApi from '../api/api';\nimport Footer from '../footer/Footer';\nimport logo from '../../assets/sub chef LOGO/Sub.Chef.LOGO1-01.jpg';\nimport jwt from 'jsonwebtoken';\n\nconst Routes = () => {\n\n    const [token, setToken] = useState(null);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n\n    const registerUser = async formData => {\n        try {\n            const token = await ChefApi.Signup(formData)\n            setCurrentUser(formData.username)\n            setToken(token)\n            localStorage.setItem('token', token);\n            return {success: true}\n        } catch (err) {\n            return {success: false, errors: err}\n        }\n    }\n\n    const LogIn = async formData => {\n        try {\n            const token = await ChefApi.Login(formData)\n            setCurrentUser(formData.username)\n            setToken(token)\n            localStorage.setItem('token', token);\n            return {success: true}\n        } catch (err) {\n            return {success: false, errors: err}\n        }\n    }\n\n    const LogOut = () => {\n        setCurrentUser(null)\n        setToken(null)\n        localStorage.removeItem('token');\n    }\n\n    useEffect(function getUserInfo() {\n        async function getCurrentUser() {\n            const token = localStorage.getItem('token');\n            if (token) {\n                try {\n                    let { username } = jwt.decode(token);\n                    ChefApi.token = token;\n                    const user= await ChefApi.getUserInfo(username);\n                    setCurrentUser(username)\n                    setUserInfo(user)\n                }\n                catch (e) {\n                    setCurrentUser(null)\n                }\n            }\n        } getCurrentUser()\n    }, [token]) \n\n    return (\n        <BrowserRouter>\n            <UserContext.Provider value={{ currentUser, token, userInfo, setUserInfo }}>\n                <NavBar LogOut={LogOut}/>\n                <img className=\"logo2\" src={logo} alt=\"logo\"/><br></br>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <CompanyList />\n                    </Route>\n                    <Route exact path=\"/signup\">\n                        <UserSignup registerUser={registerUser}/>\n                    </Route>\n                    <Route exact path=\"/login\">\n                        <Login LogIn= {LogIn} />\n                    </Route>\n                    <Route exact path=\"/userapplications\">\n                        <UserApplications currentUser={currentUser} />\n                    </Route>\n                    <ProtectedRoute exact path=\"/userprofile\">\n                        <UserProfile setUserInfo={setUserInfo} LogOut={LogOut}/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/companyprofile\">\n                        <CompaniesProfile currentUser={currentUser}/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/companiesapplications\">\n                        <CompaniesApplications currentUser={currentUser}/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/job\">\n                        <JobSignup  currentUser={currentUser} />\n                    </ProtectedRoute> \n                    <ProtectedRoute exact path=\"/company\">\n                        <CompanySignup currentUser={currentUser}/>\n                    </ProtectedRoute>\n                    <Route>\n                        <p>I can't seem to find what you want</p>\n                    </Route>\n                </Switch>\n                <Footer/>\n            </UserContext.Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import './App.css';\nimport Routes from './components/routes/Routes';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#be0000'\n    },\n    secondary: {\n      main: '#005fbe'\n    }\n  }\n})\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}