{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/EditCompany.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCompany = ({\n  company\n}) => {\n  _s();\n\n  const {\n    name,\n    address,\n    url\n  } = company;\n  const [formData, setFormData] = useState(null);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    if (company !== null) {\n      setFormData({\n        name: company.name,\n        url: userInfo.url,\n        address: userInfo.address\n      });\n    }\n  }, [userInfo]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"email\": formData.email,\n      \"isCompany\": formData.isCompany\n    };\n    await editUser(userInfo.username, editData).then(res => {\n      if (res.success) {\n        console.log('res', res);\n        const NEW_STATE = {\n          \"firstName\": res.user.firstName,\n          \"lastName\": res.user.lastName,\n          \"email\": res.user.email,\n          \"isCompany\": res.user.isCompany\n        };\n        setUserInfo(data => ({ ...data,\n          ...NEW_STATE\n        }));\n        alert(\"Updated user info\");\n      } else {\n        setErrors(res.errors);\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [formData === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"firstName\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            onChange: handleChange,\n            value: formData.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"lastName\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            onChange: handleChange,\n            value: formData.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            value: formData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"isCompany\",\n            children: \"Are you a Business?: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"isCompany\",\n            onChange: handleChange,\n            value: formData.isCompany,\n            checked: !!formData.isCompany\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Edit Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/userapplications\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"View Applications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Edit Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditCompany, \"vsB8XqWZ8prbrxEjwJOhse3RX6Q=\");\n\n_c = EditCompany;\nexport default EditCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCompany\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/EditCompany.js"],"names":["React","Button","EditCompany","company","name","address","url","formData","setFormData","useState","errors","setErrors","useEffect","userInfo","handleSubmit","e","preventDefault","editData","firstName","lastName","email","isCompany","editUser","username","then","res","success","console","log","NEW_STATE","user","setUserInfo","data","alert","handleChange","target","value","type","checked","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core'\n\nconst EditCompany = ({company}) => {\n    const { name, address, url } = company\n\n   const [formData, setFormData] = useState(null);\n    const [errors, setErrors] = useState([]);\n    \n    useEffect(() => {\n        if (company !== null) {\n            setFormData({\n                name: company.name,\n                url: userInfo.url,\n                address: userInfo.address,\n            });\n        }\n    }, [userInfo])\n    \n    const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n        \"firstName\": formData.firstName,\n        \"lastName\": formData.lastName,\n        \"email\": formData.email,\n        \"isCompany\": formData.isCompany            \n    };\n    await editUser(userInfo.username, editData)\n        .then((res) => {\n            if (res.success) {\n                console.log('res', res)\n                const NEW_STATE = {\n                    \"firstName\": res.user.firstName,\n                    \"lastName\": res.user.lastName,\n                    \"email\": res.user.email,\n                    \"isCompany\": res.user.isCompany\n                }\n                setUserInfo(data => ({\n                    ...data,\n                    ...NEW_STATE\n                }))\n                alert(\"Updated user info\")\n            }\n            else {\n                setErrors(res.errors);\n            }\n        })\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n        {formData === null  ? <p>Loading...</p> :\n            <div>\n                <h1>User Profile</h1>\n                <Form onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <label id=\"firstName\">First Name: </label>\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            onChange={handleChange}\n                            value={formData.firstName}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"lastName\">Last Name: </label>\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            onChange={handleChange}\n                            value={formData.lastName}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"email\">Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            value={formData.email}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"isCompany\">Are you a Business?: </label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"isCompany\"\n                            onChange={handleChange}\n                            value={formData.isCompany}\n                            checked={!!formData.isCompany}\n                        />\n                    </FormGroup>\n                    <Button>Edit Account</Button>\n                    <div>\n                        {errors.length ?\n                            <p>{errors}</p>\n                            : null }\n                    </div>\n                </Form>\n                <a href=\"/userapplications\"><Button>View Applications</Button></a>\n            </div>\n        }\n\n            <h1>{name}</h1>\n            <h3>{address}</h3>\n            <h3>{url}</h3>\n            <Button variant=\"contained\" color=\"primary\">Edit Company</Button>\n        </div>\n\n    )\n}\n\nexport default EditCompany;"]},"metadata":{},"sourceType":"module"}