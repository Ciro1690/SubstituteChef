{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/UserSignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { TextField, MenuItem, Select, InputLabel, Button } from '@material-ui/core';\nimport \"../../styles/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSignup = ({\n  registerUser\n}) => {\n  _s();\n\n  const INITIAL_DATA = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    isCompany: false\n  };\n  const [formData, setFormData] = useState(INITIAL_DATA);\n  const [errors, setErrors] = useState([]);\n  let history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const registerData = {\n      \"username\": formData.username,\n      \"password\": formData.password,\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"email\": formData.email,\n      \"isCompany\": formData.isCompany\n    };\n    const result = await registerUser(registerData);\n    let companyRedirect;\n\n    if (formData.isCompany) {\n      companyRedirect = true;\n    }\n\n    setFormData(INITIAL_DATA);\n\n    if (result.success) {\n      alert(\"Created account for Substitute Chef\");\n\n      if (companyRedirect) {\n        history.push(\"/company\");\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setErrors(result.errors);\n    }\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    console.log(name, value);\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Substitute Chef!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          onChange: handleChange,\n          value: formData.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          value: formData.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"firstName\",\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          onChange: handleChange,\n          value: formData.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"lastName\",\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: formData.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          value: formData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"isCompany\",\n          children: \"Are you a Business?: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isCompany\",\n          onChange: handleChange,\n          value: formData.isCompany\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserSignup, \"dzeZ+YxNQHoo5Fercmc6piMT3EU=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserSignup;\nexport default UserSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignup\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/UserSignup.js"],"names":["React","useState","useHistory","TextField","MenuItem","Select","InputLabel","Button","UserSignup","registerUser","INITIAL_DATA","username","password","firstName","lastName","email","isCompany","formData","setFormData","errors","setErrors","history","handleSubmit","e","preventDefault","registerData","result","companyRedirect","success","alert","push","handleChange","name","target","value","type","checked","console","log","data","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n    TextField,\n    MenuItem,\n    Select,\n    InputLabel,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\n\nconst UserSignup = ({ registerUser }) => {\n    const INITIAL_DATA = {\n        username: \"\",\n        password: \"\", \n        firstName: \"\", \n        lastName: \"\", \n        email: \"\",\n        isCompany: false\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"username\": formData.username,\n            \"password\":formData.password,\n            \"firstName\": formData.firstName,\n            \"lastName\": formData.lastName,\n            \"email\": formData.email,\n            \"isCompany\": formData.isCompany            \n        };\n        const result = await registerUser(registerData)\n\n        let companyRedirect\n        if (formData.isCompany) {\n            companyRedirect = true;\n        }\n        \n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Created account for Substitute Chef\")\n            if (companyRedirect) {\n                history.push(\"/company\")\n            }\n            else {\n                history.push(\"/\");\n            }\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        console.log(name, value)\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"register-div\">\n            <h1>Welcome to Substitute Chef!</h1>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <label id=\"username\">Username: </label>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        onChange={handleChange}\n                        value={formData.username}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"password\">Password: </label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        value={formData.password}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"firstName\">First Name: </label>\n                    <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        onChange={handleChange}\n                        value={formData.firstName}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"lastName\">Last Name: </label>\n                    <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        onChange={handleChange}\n                        value={formData.lastName}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        value={formData.email}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"isCompany\">Are you a Business?: </label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"isCompany\"\n                        onChange={handleChange}\n                        value={formData.isCompany}\n                    />\n                </FormGroup>\n                <Button>Submit</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default UserSignup;"]},"metadata":{},"sourceType":"module"}