{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/JobCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCard = ({\n  job\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const [applied, setApplied] = useState(false);\n  console.log(userInfo); // const getJobs = async e => {\n  //     const userInfo = await ChefApi.getUserInfo(currentUser)\n  //     return userInfo\n  // }\n\n  const handleClick = async e => {\n    const userInfo = await getJobs();\n    const applications = userInfo.applications;\n    const newJobId = await ChefApi.applyToJob(currentUser, job.id);\n\n    if (!applications.includes(newJobId)) {\n      setApplied(true);\n      alert(`Applied to ${job.position}`);\n    }\n  };\n\n  useEffect(async () => {\n    const userInfo = await getJobs();\n\n    if (userInfo.applications.includes(job.id)) {\n      setApplied(true);\n    }\n  }, [setApplied, job.id, userInfo.applications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Position: \", job.position]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hourly pay: $\", job.hourly_pay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", formatDate(job.date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), applied ? /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-success btn-sm\",\n      children: \"Applied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      className: \"btn btn-info btn-sm\",\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobCard, \"3vyE8LzyBB6Uiqes+za7hCVKKLc=\");\n\n_c = JobCard;\nexport default JobCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/JobCard.js"],"names":["React","useContext","useEffect","useState","Button","UserContext","ChefApi","formatDate","JobCard","job","currentUser","userInfo","applied","setApplied","console","log","handleClick","e","getJobs","applications","newJobId","applyToJob","id","includes","alert","position","hourly_pay","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SACIC,MADJ,QAEO,YAFP;AAGA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAeV,UAAU,CAACI,WAAD,CAA/B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EALyB,CAMzB;AACA;AACA;AACA;;AAEA,QAAMK,WAAW,GAAG,MAAMC,CAAN,IAAW;AAC3B,UAAMN,QAAQ,GAAG,MAAMO,OAAO,EAA9B;AACA,UAAMC,YAAY,GAAGR,QAAQ,CAACQ,YAA9B;AACA,UAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACe,UAAR,CAAmBX,WAAnB,EAAgCD,GAAG,CAACa,EAApC,CAAvB;;AACA,QAAI,CAACH,YAAY,CAACI,QAAb,CAAsBH,QAAtB,CAAL,EAAsC;AAClCP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAW,MAAAA,KAAK,CAAE,cAAaf,GAAG,CAACgB,QAAS,EAA5B,CAAL;AACH;AACJ,GARD;;AAUAvB,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMS,QAAQ,GAAG,MAAMO,OAAO,EAA9B;;AACA,QAAIP,QAAQ,CAACQ,YAAT,CAAsBI,QAAtB,CAA+Bd,GAAG,CAACa,EAAnC,CAAJ,EAA4C;AACxCT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GALQ,EAKN,CAACA,UAAD,EAAaJ,GAAG,CAACa,EAAjB,EAAqBX,QAAQ,CAACQ,YAA9B,CALM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAA,+BAAcV,GAAG,CAACgB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAiBhB,GAAG,CAACiB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,2BAAUnB,UAAU,CAACE,GAAG,CAACkB,IAAL,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKf,OAAO,gBACR,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,WAAjB;AAA8B,MAAA,SAAS,EAAC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxCD;;GAAMR,O;;KAAAA,O;AA0CN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport {\n    Button\n} from 'reactstrap'; \nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\n\nconst JobCard = ({ job }) => {\n    const { currentUser } = useContext(UserContext);\n    const { userInfo } = useContext(UserContext);\n    const [applied, setApplied] = useState(false);\n\n    console.log(userInfo)\n    // const getJobs = async e => {\n    //     const userInfo = await ChefApi.getUserInfo(currentUser)\n    //     return userInfo\n    // }\n\n    const handleClick = async e => {\n        const userInfo = await getJobs();\n        const applications = userInfo.applications\n        const newJobId = await ChefApi.applyToJob(currentUser, job.id)\n        if (!applications.includes(newJobId)) {\n            setApplied(true)\n            alert(`Applied to ${job.position}`)\n        }\n    }\n\n    useEffect(async () => {\n        const userInfo = await getJobs()\n        if (userInfo.applications.includes(job.id)) {\n            setApplied(true)\n        }\n    }, [setApplied, job.id, userInfo.applications])\n\n    return (\n        <div>\n            <p>Position: {job.position}</p>\n            <p>Hourly pay: ${job.hourly_pay}</p>\n            <p>Date: {formatDate(job.date)}</p>\n            {applied ?\n            <Button className=\"btn btn-success btn-sm\">Applied</Button>\n            :\n            <Button onClick={handleClick} className=\"btn btn-info btn-sm\">Apply</Button>\n            }\n        </div> \n    )\n}\n\nexport default JobCard;"]},"metadata":{},"sourceType":"module"}