{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/CompaniesApplications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompaniesApplications = ({\n  currentUser\n}) => {\n  _s();\n\n  const [companies, setCompanies] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function getCompanies() {\n      const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n      setCompanies(userCompanies.companies);\n      setIsLoading(false);\n      console.log(companies);\n    }\n\n    if (isLoading && currentUser !== null) {\n      getCompanies();\n    }\n  }, [currentUser, isLoading]);\n  return applications.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"applications-ul\",\n      children: applications.map(application => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Company: \", application.company.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Address: \", application.company.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"URL: \", application.company.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Position: \", application.job.position]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Hourly Pay: \", application.job.hourly_pay]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Date: \", formatDate(application.job.date)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Status: \", application.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 62\n        }, this)]\n      }, application.job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Apply to jobs to view applications\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompaniesApplications, \"niGTBxyBTMpwtAUx5oAqsnDc55U=\");\n\n_c = CompaniesApplications;\nexport default CompaniesApplications;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompaniesApplications\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/CompaniesApplications.js"],"names":["React","useState","useEffect","ChefApi","CompaniesApplications","currentUser","companies","setCompanies","isLoading","setIsLoading","getCompanies","userCompanies","getCompaniesFromUsername","console","log","applications","length","isLoaded","map","application","company","name","address","url","job","position","hourly_pay","formatDate","date","status","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,YAAf,GAA8B;AAC1B,YAAMC,aAAa,GAAG,MAAMR,OAAO,CAACS,wBAAR,CAAiCP,WAAjC,CAA5B;AACAE,MAAAA,YAAY,CAACI,aAAa,CAACL,SAAf,CAAZ;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACH;;AACD,QAAIE,SAAS,IAAIH,WAAW,KAAK,IAAjC,EAAuC;AACnCK,MAAAA,YAAY;AACf;AACJ,GAVQ,EAUN,CAACL,WAAD,EAAcG,SAAd,CAVM,CAAT;AAaA,SACIO,YAAY,CAACC,MAAb,GAAsB,CAAtB,gBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACC,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAoC,IAFzC,eAGI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,gBACKF,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBACzB;AAAA,gCACI;AAAA,kCAAcA,WAAW,CAACC,OAAZ,CAAoBC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCAAcF,WAAW,CAACC,OAAZ,CAAoBE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,8BAAUH,WAAW,CAACC,OAAZ,CAAoBG,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,mCAAeJ,WAAW,CAACK,GAAZ,CAAgBC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,qCAAiBN,WAAW,CAACK,GAAZ,CAAgBE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAA,+BAAWC,UAAU,CAACR,WAAW,CAACK,GAAZ,CAAgBI,IAAjB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAA,iCAAaT,WAAW,CAACU,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAQyC;AAAA;AAAA;AAAA;AAAA,gBARzC;AAAA,SAAUV,WAAW,CAACK,GAAZ,CAAgBM,EAA1B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,gBAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArBJ;AAuBH,CAxCD;;GAAM1B,qB;;KAAAA,qB;AA0CN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\n\nconst CompaniesApplications = ({currentUser}) => {\n    const [companies, setCompanies] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        async function getCompanies() { \n            const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n            setCompanies(userCompanies.companies);\n            setIsLoading(false); \n            console.log(companies)\n        }\n        if (isLoading && currentUser !== null) {\n            getCompanies()\n        }\n    }, [currentUser, isLoading])\n\n\n    return (\n        applications.length > 0 ?\n        <div>\n            <h1>Current Applications</h1>\n            {!isLoaded ? <div>Loading...</div> : null}\n            <ul className=\"applications-ul\">\n                {applications.map(application => (\n                    <div key={application.job.id}>\n                        <li>Company: {application.company.name}</li>\n                        <li>Address: {application.company.address}</li>\n                        <li>URL: {application.company.url}</li>\n                        <br></br>\n                        <li>Position: {application.job.position}</li>\n                        <li>Hourly Pay: {application.job.hourly_pay}</li>\n                        <li>Date: {formatDate(application.job.date)}</li>\n                        <li>Status: {application.status}</li><br></br>\n                    </div>\n                ))}\n            </ul>\n        </div>\n        : \n        <h1>Apply to jobs to view applications</h1>\n    )\n}\n\nexport default CompaniesApplications;"]},"metadata":{},"sourceType":"module"}