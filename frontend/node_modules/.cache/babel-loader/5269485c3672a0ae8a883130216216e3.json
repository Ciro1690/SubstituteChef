{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/JobCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCard = ({\n  job\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [applied, setApplied] = useState(false);\n\n  const getJobs = async e => {\n    const userInfo = await ChefApi.getUserInfo(currentUser);\n    return userInfo.applications;\n  };\n\n  const handleClick = async e => {\n    const applications = await getJobs();\n    const newJobId = await ChefApi.applyToJob(currentUser, job.id);\n\n    if (!applications.includes(newJobId)) {\n      setApplied(true);\n      alert(`Applied to ${job.position}`);\n    }\n  };\n\n  useEffect(() => {}); // const applyToJob = async () => {\n  //     try {\n  //         const jobId = await ChefApi.applyToJob(currentUser, job.id)\n  //         alert(`Applied to ${job.position} job`)\n  //         return {success: true, jobId}\n  //     } catch (err) {\n  //         console.log(err)\n  //         return {success: false, errors: err}\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Position: \", job.position]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hourly pay: $\", job.hourly_pay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", formatDate(job.date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: applyToJob,\n      className: \"btn btn-success btn-sm\",\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobCard, \"C1q5puECvZ3Ykth+o+JxSV96M5I=\");\n\n_c = JobCard;\nexport default JobCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/JobCard.js"],"names":["React","useContext","useEffect","useState","Button","UserContext","ChefApi","formatDate","JobCard","job","currentUser","applied","setApplied","getJobs","e","userInfo","getUserInfo","applications","handleClick","newJobId","applyToJob","id","includes","alert","position","hourly_pay","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SACIC,MADJ,QAEO,YAFP;AAGA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMU,OAAO,GAAG,MAAMC,CAAN,IAAW;AACvB,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,WAAR,CAAoBN,WAApB,CAAvB;AACA,WAAOK,QAAQ,CAACE,YAAhB;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAMJ,CAAN,IAAW;AAC3B,UAAMG,YAAY,GAAG,MAAMJ,OAAO,EAAlC;AACA,UAAMM,QAAQ,GAAG,MAAMb,OAAO,CAACc,UAAR,CAAmBV,WAAnB,EAAgCD,GAAG,CAACY,EAApC,CAAvB;;AACA,QAAI,CAACJ,YAAY,CAACK,QAAb,CAAsBH,QAAtB,CAAL,EAAsC;AAClCP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAW,MAAAA,KAAK,CAAE,cAAad,GAAG,CAACe,QAAS,EAA5B,CAAL;AACH;AACJ,GAPD;;AASAtB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT,CAlByB,CAsB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI;AAAA,4BACI;AAAA,+BAAcO,GAAG,CAACe,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAiBf,GAAG,CAACgB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,2BAAUlB,UAAU,CAACE,GAAG,CAACiB,IAAL,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,UAAjB;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzCD;;GAAMZ,O;;KAAAA,O;AA2CN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport {\n    Button\n} from 'reactstrap'; \nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\n\nconst JobCard = ({ job }) => {\n    const { currentUser } = useContext(UserContext);\n    const [applied, setApplied] = useState(false);\n\n    const getJobs = async e => {\n        const userInfo = await ChefApi.getUserInfo(currentUser)\n        return userInfo.applications\n    }\n\n    const handleClick = async e => {\n        const applications = await getJobs();\n        const newJobId = await ChefApi.applyToJob(currentUser, job.id)\n        if (!applications.includes(newJobId)) {\n            setApplied(true)\n            alert(`Applied to ${job.position}`)\n        }\n    }\n\n    useEffect(() => {\n        \n    })\n\n// const applyToJob = async () => {\n//     try {\n//         const jobId = await ChefApi.applyToJob(currentUser, job.id)\n//         alert(`Applied to ${job.position} job`)\n//         return {success: true, jobId}\n//     } catch (err) {\n//         console.log(err)\n//         return {success: false, errors: err}\n//     }\n// }\n\n    return (\n        <div>\n            <p>Position: {job.position}</p>\n            <p>Hourly pay: ${job.hourly_pay}</p>\n            <p>Date: {formatDate(job.date)}</p>\n            <Button onClick={applyToJob} className=\"btn btn-success btn-sm\">Apply</Button>\n        </div> \n    )\n}\n\nexport default JobCard;"]},"metadata":{},"sourceType":"module"}