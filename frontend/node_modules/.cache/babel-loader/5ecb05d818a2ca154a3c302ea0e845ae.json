{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import{getJobsForCompany}from'../utilities/utility';import JobCard from\"./JobCard\";import UserContext from'../routes/UserContext';import'../../styles/CompanyCard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CompanyCard=function CompanyCard(_ref){var company=_ref.company,setClickedCompany=_ref.setClickedCompany,clickedCompany=_ref.clickedCompany;var currentUser=useContext(UserContext);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobs=_useState2[0],setJobs=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var id=company.id,name=company.name,url=company.url,address=company.address,lat=company.lat,lng=company.lng;useEffect(function(){function getJobs(){return _getJobs.apply(this,arguments);}function _getJobs(){_getJobs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var jobList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getJobsForCompany(id);case 2:jobList=_context.sent;if(jobList.success){setJobs(jobList.jobs);}setIsLoading(false);case 5:case\"end\":return _context.stop();}}},_callee);}));return _getJobs.apply(this,arguments);}getJobs();},[id]);var directions=\"https://www.google.com/maps/dir/?api=1&travelmode=driving&layer=traffic&destination=\".concat(lat,\",\").concat(lng);var setCompany=function setCompany(){setClickedCompany(company);};if(isLoading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"company-card container\",children:/*#__PURE__*/_jsxs(\"div\",{onClick:setCompany,className:clickedCompany.name===name?\"selected-card row\":\"inner-card row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"company-info text-center col\",children:[/*#__PURE__*/_jsx(\"h1\",{children:name}),/*#__PURE__*/_jsx(\"h2\",{children:address}),/*#__PURE__*/_jsx(\"h4\",{children:/*#__PURE__*/_jsx(\"a\",{href:url,target:\"blank\",children:url})}),/*#__PURE__*/_jsx(\"h4\",{children:/*#__PURE__*/_jsx(\"a\",{href:directions,rel:\"noreferrer\",target:\"_blank\",children:\"Get Directions\"})})]}),currentUser.currentUser==null?null:/*#__PURE__*/_jsxs(\"div\",{className:\"company-info col\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:jobs.length>0?jobs.map(function(job){return/*#__PURE__*/_jsx(JobCard,{job:job},job.id);}):/*#__PURE__*/_jsx(\"h4\",{className:\"text-center\",children:\"No jobs to display\"})})]})]})});};export default CompanyCard;","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/home/CompanyCard.js"],"names":["React","useState","useEffect","useContext","getJobsForCompany","JobCard","UserContext","CompanyCard","company","setClickedCompany","clickedCompany","currentUser","jobs","setJobs","isLoading","setIsLoading","id","name","url","address","lat","lng","getJobs","jobList","success","directions","setCompany","length","map","job"],"mappings":"qiBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,iBAAT,KAAkC,sBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,MAAO,8BAAP,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAoD,IAAjDC,CAAAA,OAAiD,MAAjDA,OAAiD,CAAxCC,iBAAwC,MAAxCA,iBAAwC,CAArBC,cAAqB,MAArBA,cAAqB,CACpE,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACG,WAAD,CAA9B,CACA,cAAwBL,QAAQ,CAAC,EAAD,CAAhC,wCAAOW,IAAP,eAAaC,OAAb,eACA,eAAkCZ,QAAQ,CAAC,IAAD,CAA1C,yCAAOa,SAAP,eAAkBC,YAAlB,eACA,GAAQC,CAAAA,EAAR,CAA6CR,OAA7C,CAAQQ,EAAR,CAAYC,IAAZ,CAA6CT,OAA7C,CAAYS,IAAZ,CAAkBC,GAAlB,CAA6CV,OAA7C,CAAkBU,GAAlB,CAAuBC,OAAvB,CAA6CX,OAA7C,CAAuBW,OAAvB,CAAgCC,GAAhC,CAA6CZ,OAA7C,CAAgCY,GAAhC,CAAqCC,GAArC,CAA6Cb,OAA7C,CAAqCa,GAArC,CAEAnB,SAAS,CAAC,UAAM,SACGoB,CAAAA,OADH,+HACZ,qKACwBlB,CAAAA,iBAAiB,CAACY,EAAD,CADzC,QACQO,OADR,eAEI,GAAIA,OAAO,CAACC,OAAZ,CAAqB,CACjBX,OAAO,CAACU,OAAO,CAACX,IAAT,CAAP,CACH,CACDG,YAAY,CAAC,KAAD,CAAZ,CALJ,sDADY,0CAQZO,OAAO,GACV,CATQ,CASN,CAACN,EAAD,CATM,CAAT,CAWA,GAAMS,CAAAA,UAAU,+FAA0FL,GAA1F,aAAiGC,GAAjG,CAAhB,CAEA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBjB,iBAAiB,CAACD,OAAD,CAAjB,CACH,CAFD,CAIA,GAAIM,SAAJ,CAAe,CACX,mBAAO,8BAAP,CACH,CAED,mBACI,YAAK,SAAS,CAAC,wBAAf,uBACI,aAAK,OAAO,CAAEY,UAAd,CAA0B,SAAS,CAAEhB,cAAc,CAACO,IAAf,GAAwBA,IAAxB,CAA+B,mBAA/B,CAAqD,gBAA1F,wBACI,aAAK,SAAS,CAAC,8BAAf,wBACI,oBAAKA,IAAL,EADJ,cAEI,oBAAKE,OAAL,EAFJ,cAGI,iCAAI,UAAG,IAAI,CAAED,GAAT,CAAc,MAAM,CAAC,OAArB,UAA8BA,GAA9B,EAAJ,EAHJ,cAII,iCAAI,UAAG,IAAI,CAAEO,UAAT,CAAqB,GAAG,CAAC,YAAzB,CAAsC,MAAM,CAAC,QAA7C,4BAAJ,EAJJ,GADJ,CAOKd,WAAW,CAACA,WAAZ,EAA2B,IAA3B,CAAkC,IAAlC,cAED,aAAK,SAAS,CAAC,kBAAf,wBACI,WAAI,SAAS,CAAC,aAAd,kBADJ,cAEI,YAAK,SAAS,CAAC,KAAf,UACCC,IAAI,CAACe,MAAL,CAAc,CAAd,CAAkBf,IAAI,CAACgB,GAAL,CAAS,SAAAC,GAAG,qBAC3B,KAAC,OAAD,EAAsB,GAAG,CAAEA,GAA3B,EAAcA,GAAG,CAACb,EAAlB,CAD2B,EAAZ,CAAlB,cAEI,WAAI,SAAS,CAAC,aAAd,gCAHL,EAFJ,GATJ,GADJ,EADJ,CAuBH,CAlDD,CAoDA,cAAeT,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport UserContext from '../routes/UserContext';\nimport '../../styles/CompanyCard.css';\n\nconst CompanyCard = ({ company, setClickedCompany, clickedCompany }) => {\n    const currentUser = useContext(UserContext);\n    const [jobs, setJobs] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { id, name, url, address, lat, lng } = company;\n\n    useEffect(() => {\n        async function getJobs() {\n            let jobList = await getJobsForCompany(id);\n            if (jobList.success) {\n                setJobs(jobList.jobs);\n            } \n            setIsLoading(false);\n        }\n        getJobs();\n    }, [id]);\n\n    const directions = `https://www.google.com/maps/dir/?api=1&travelmode=driving&layer=traffic&destination=${lat},${lng}`\n\n    const setCompany = () => {\n        setClickedCompany(company)\n    }\n\n    if (isLoading) {\n        return <p>Loading</p>\n    }\n\n    return (\n        <div className=\"company-card container\">\n            <div onClick={setCompany} className={clickedCompany.name === name ? \"selected-card row\" : \"inner-card row\"}>\n                <div className=\"company-info text-center col\">\n                    <h1>{name}</h1>\n                    <h2>{address}</h2>\n                    <h4><a href={url} target=\"blank\">{url}</a></h4>\n                    <h4><a href={directions} rel=\"noreferrer\" target=\"_blank\">Get Directions</a></h4>\n                </div>\n                {currentUser.currentUser == null ? null \n                :\n                <div className=\"company-info col\">\n                    <h2 className=\"text-center\">Jobs</h2>\n                    <div className=\"row\">\n                    {jobs.length > 0 ? jobs.map(job => (\n                        <JobCard key={job.id} job={job}/>\n                    )) : <h4 className=\"text-center\">No jobs to display</h4>}\n                    </div>\n                </div>\n                 }\n            </div>\n        </div> \n    )\n}\n\nexport default CompanyCard;"]},"metadata":{},"sourceType":"module"}