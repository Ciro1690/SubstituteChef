{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/home/JobCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCard = ({\n  job\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [applied, setApplied] = useState(false);\n\n  const handleClick = async () => {\n    const userInfo = await ChefApi.getUserInfo(currentUser);\n    const applications = userInfo.applications;\n    const newJobId = await ChefApi.applyToJob(currentUser, job.id);\n\n    if (!applications.includes(newJobId)) {\n      setApplied(true);\n      alert(`Applied to ${job.position}`);\n    }\n  };\n\n  useEffect(() => {\n    async function getApplications() {\n      const userInfo = await ChefApi.getUserInfo(currentUser);\n      console.log(userInfo);\n\n      if (userInfo.applications.includes(job.id)) {\n        setApplied(true);\n      }\n    }\n\n    getApplications();\n  }, [currentUser, job.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Position: \", job.position.toUpperCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hourly pay: $\", job.hourly_pay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", formatDate(job.date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), applied ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      children: \"Applied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobCard, \"C1q5puECvZ3Ykth+o+JxSV96M5I=\");\n\n_c = JobCard;\nexport default JobCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/home/JobCard.js"],"names":["React","useContext","useEffect","useState","Button","UserContext","ChefApi","formatDate","JobCard","job","currentUser","applied","setApplied","handleClick","userInfo","getUserInfo","applications","newJobId","applyToJob","id","includes","alert","position","getApplications","console","log","toUpperCase","hourly_pay","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEI,QAAMU,WAAW,GAAG,YAAY;AAC5B,UAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,WAAR,CAAoBL,WAApB,CAAvB;AACA,UAAMM,YAAY,GAAGF,QAAQ,CAACE,YAA9B;AACJ,UAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,UAAR,CAAmBR,WAAnB,EAAgCD,GAAG,CAACU,EAApC,CAAvB;;AACA,QAAI,CAACH,YAAY,CAACI,QAAb,CAAsBH,QAAtB,CAAL,EAAsC;AAClCL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,MAAAA,KAAK,CAAE,cAAaZ,GAAG,CAACa,QAAS,EAA5B,CAAL;AACH;AACJ,GARG;;AAUJpB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeqB,eAAf,GAAiC;AAC7B,YAAMT,QAAQ,GAAG,MAAMR,OAAO,CAACS,WAAR,CAAoBL,WAApB,CAAvB;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;;AACA,UAAIA,QAAQ,CAACE,YAAT,CAAsBI,QAAtB,CAA+BX,GAAG,CAACU,EAAnC,CAAJ,EAA4C;AACxCP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;;AACDW,IAAAA,eAAe;AAClB,GATQ,EASN,CAACb,WAAD,EAAcD,GAAG,CAACU,EAAlB,CATM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA,+BAAcV,GAAG,CAACa,QAAJ,CAAaI,WAAb,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAiBjB,GAAG,CAACkB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,2BAAUpB,UAAU,CAACE,GAAG,CAACmB,IAAL,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKjB,OAAO,gBACR,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAA8B,MAAA,OAAO,EAAC,WAAtC;AAAkD,MAAA,KAAK,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtCD;;GAAML,O;;KAAAA,O;AAwCN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core'; \nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\n\nconst JobCard = ({ job }) => {\n    const { currentUser } = useContext(UserContext);\n    const [applied, setApplied] = useState(false);\n\n        const handleClick = async () => {\n            const userInfo = await ChefApi.getUserInfo(currentUser)\n            const applications = userInfo.applications\n        const newJobId = await ChefApi.applyToJob(currentUser, job.id)\n        if (!applications.includes(newJobId)) {\n            setApplied(true)\n            alert(`Applied to ${job.position}`)\n        }\n    }\n    \n    useEffect(() => {\n        async function getApplications() {\n            const userInfo = await ChefApi.getUserInfo(currentUser)\n            console.log(userInfo)\n            if (userInfo.applications.includes(job.id)) {\n                setApplied(true)\n            }\n        }\n        getApplications()\n    }, [currentUser, job.id])\n    \n\n    return (\n        <div className=\"col text-center\">\n            <p>Position: {job.position.toUpperCase()}</p>\n            <p>Hourly pay: ${job.hourly_pay}</p>\n            <p>Date: {formatDate(job.date)}</p>\n            {applied ?\n            <Button variant=\"contained\" color=\"secondary\">Applied</Button>\n            :\n            <Button onClick={handleClick} variant=\"contained\" color=\"primary\">Apply</Button>\n            }\n        </div> \n    )\n}\n\nexport default JobCard;"]},"metadata":{},"sourceType":"module"}