{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport '../../styles/CompanyCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyCard = ({\n  company,\n  setClickedCompany,\n  clickedCompany\n}) => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [hasError, setHasError] = useState(false);\n  const {\n    name,\n    url,\n    address\n  } = company;\n\n  const toggleJobs = async () => {\n    try {\n      const jobList = await getJobsForCompany(company.id);\n      console.log(jobList);\n      setJobs(jobList.jobs);\n    } catch (err) {\n      setHasError(true);\n    }\n  };\n\n  const ErrorComponent = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clickedCompany.name === name ? \"selected-card\" : \"inner-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"blank\",\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark btn-sm\",\n        onClick: toggleJobs,\n        children: \"Open Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), !hasError && jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(ErrorComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyCard, \"qSIh10/CsWvI4IeQymklMgS/uaM=\");\n\n_c = CompanyCard;\nexport default CompanyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyCard.js"],"names":["React","useState","getJobsForCompany","JobCard","CompanyCard","company","setClickedCompany","clickedCompany","jobs","setJobs","hasError","setHasError","name","url","address","toggleJobs","jobList","id","console","log","err","ErrorComponent","length","map","job"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,8BAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA;AAA9B,CAAD,KAAoD;AAAA;;AACpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAyBT,OAA/B;;AAEA,QAAMU,UAAU,GAAG,YAAY;AACvB,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMd,iBAAiB,CAACG,OAAO,CAACY,EAAT,CAAvC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAP,MAAAA,OAAO,CAACO,OAAO,CAACR,IAAT,CAAP;AACH,KAJD,CAKA,OAAOY,GAAP,EAAY;AACRT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GATL;;AAWA,QAAMU,cAAc,GAAG,MAAM;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEd,cAAc,CAACK,IAAf,KAAwBA,IAAxB,GAA+B,eAA/B,GAAiD,YAAjE;AAAA,8BACI;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,IAAI,EAAED,GAAT;AAAc,QAAA,MAAM,EAAC,OAArB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAG0C;AAAA;AAAA;AAAA;AAAA,cAH1C,eAII;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEE,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKK,CAACL,QAAD,IAAaF,IAAI,CAACc,MAAL,GAAc,CAA3B,GACDd,IAAI,CAACe,GAAL,CAASC,GAAG,iBACR,QAAC,OAAD;AAAsB,QAAA,GAAG,EAAEA;AAA3B,SAAcA,GAAG,CAACP,EAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,CADC,gBAGI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cART;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;GAAMb,W;;KAAAA,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport '../../styles/CompanyCard.css';\n\nconst CompanyCard = ({ company, setClickedCompany, clickedCompany }) => {\n    const [jobs, setJobs] = useState([]);\n    const [hasError, setHasError] = useState(false);\n    const { name, url, address } = company;\n\n    const toggleJobs = async () => {\n            try {\n                const jobList = await getJobsForCompany(company.id)\n                console.log(jobList)\n                setJobs(jobList.jobs)\n            }   \n            catch (err) {\n                setHasError(true);\n            }\n        }\n\n    const ErrorComponent = () => {\n        return <p>No jobs to display</p>\n    }\n\n    return (\n        <div className=\"company-card\">\n            <div className={clickedCompany.name === name ? \"selected-card\" : \"inner-card\"}>\n                <h1>{name}</h1>\n                <h3>{address}</h3>\n                <a href={url} target=\"blank\">{url}</a><br></br>\n                <button className=\"btn btn-dark btn-sm\" onClick={toggleJobs}>Open Jobs</button>\n                {!hasError && jobs.length > 0 ?\n                jobs.map(job => (\n                    <JobCard key={job.id} job={job}/>\n                )) : <ErrorComponent></ErrorComponent>}\n            </div>\n        </div> \n    )\n}\n\nexport default CompanyCard;"]},"metadata":{},"sourceType":"module"}