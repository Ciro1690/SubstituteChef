{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/jobs/JobSignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { registerJob } from '../utilities/utility';\nimport { TextField, Button } from '@material-ui/core';\nimport \"../../styles/Register.css\";\nimport ChefApi from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobSignUp = ({\n  currentUser\n}) => {\n  _s();\n\n  const INITIAL_DATA = {\n    position: \"\",\n    hourlyPay: \"\",\n    date: \"\",\n    companyId: \"\"\n  };\n  const [formData, setFormData] = useState(INITIAL_DATA);\n  const [errors, setErrors] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  let history = useHistory();\n  useEffect(() => {\n    async function getCompanies() {\n      let companyList = await ChefApi.getCompaniesFromUsername(currentUser);\n      setCompanies(companyList.companies);\n      setIsLoaded(true);\n    }\n\n    getCompanies();\n  }, [currentUser]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const registerData = {\n      \"position\": formData.position,\n      \"hourlyPay\": formData.hourlyPay,\n      \"date\": formData.date,\n      \"companyId\": formData.companyId\n    };\n    console.log(registerData);\n    const result = await registerJob(registerData);\n    console.log(result);\n    setFormData(INITIAL_DATA);\n\n    if (result.success) {\n      alert(\"Added new job\");\n      history.push(\"/\");\n    } else {\n      setErrors(result.errors);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name, value);\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return companies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post a Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"\",\n        type: \"text\",\n        name: \"position\",\n        onChange: handleChange,\n        value: formData.position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"hourlyPay\",\n          children: \"Hourly Pay: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"14\",\n          name: \"hourlyPay\",\n          onChange: handleChange,\n          value: formData.hourlyPay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"date\",\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          onChange: handleChange,\n          value: formData.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"company\",\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"companyId\",\n          value: formData.companyId,\n          onChange: handleChange,\n          children: companies.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: company.id,\n            children: company.name\n          }, company.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Register a company to post a job\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobSignUp, \"0EgW0NltdMGZ4B9hsAuba4+xZSg=\", false, function () {\n  return [useHistory];\n});\n\n_c = JobSignUp;\nexport default JobSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobSignUp\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/jobs/JobSignup.js"],"names":["React","useState","useEffect","useHistory","registerJob","TextField","Button","ChefApi","JobSignUp","currentUser","INITIAL_DATA","position","hourlyPay","date","companyId","formData","setFormData","errors","setErrors","companies","setCompanies","isLoaded","setIsLoaded","history","getCompanies","companyList","getCompaniesFromUsername","handleSubmit","e","preventDefault","registerData","console","log","result","success","alert","push","handleChange","name","value","target","data","length","map","company","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { registerJob } from '../utilities/utility';\nimport {\n    TextField,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\nimport ChefApi from '../api/api';\n\nconst JobSignUp = ({ currentUser }) => {\n\n    const INITIAL_DATA = {\n        position: \"\",\n        hourlyPay: \"\", \n        date: \"\",\n        companyId: \"\"\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    const [companies, setCompanies] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    let history = useHistory();\n\n    useEffect(() => {\n        async function getCompanies() {\n            let companyList = await ChefApi.getCompaniesFromUsername(currentUser);\n            setCompanies(companyList.companies);\n            setIsLoaded(true);\n        }\n        getCompanies();\n    }, [currentUser]);\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"position\": formData.position,\n            \"hourlyPay\":formData.hourlyPay,\n            \"date\": formData.date,\n            \"companyId\": formData.companyId         \n        };\n        console.log(registerData)\n        const result = await registerJob(registerData)\n        console.log(result)\n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Added new job\")\n            history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n    const handleChange = e => {\n        const {name, value} = e.target;\n        console.log(name, value)\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        companies.length > 0 ? \n        <div>\n            <h1>Post a Job</h1>\n            {!isLoaded ? <div>Loading...</div> : null}\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    label=\"\"\n                    type=\"text\"\n                    name=\"position\"\n                    onChange={handleChange}\n                    value={formData.position}/>\n                <FormGroup>\n                    <label id=\"hourlyPay\">Hourly Pay: </label>\n                    <input\n                        type=\"number\"\n                        min=\"14\"\n                        name=\"hourlyPay\"\n                        onChange={handleChange}\n                        value={formData.hourlyPay}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"date\">Date: </label>\n                    <input\n                        type=\"date\"\n                        name=\"date\"\n                        onChange={handleChange}\n                        value={formData.date}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"company\">Company:</label>\n                        <select name=\"companyId\" value={formData.companyId} onChange={handleChange}>\n                            {companies.map(company => (\n                                <option value={company.id} key={company.id}>{company.name}</option>\n                            ))}\n                        </select><br></br>\n                </FormGroup>\n                <Button variant=\"contained\" color=\"primary\">Post Job</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </form>\n        </div>\n        :\n        <h1>Register a company to post a job</h1>\n    )\n}\n\nexport default JobSignUp;"]},"metadata":{},"sourceType":"module"}