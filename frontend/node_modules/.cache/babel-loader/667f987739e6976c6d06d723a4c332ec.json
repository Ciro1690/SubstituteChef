{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/JobCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Button } from 'reactstrap';\nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCard = ({\n  job\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [applied, setApplied] = useState(false);\n\n  const applyToJob = async () => {\n    try {\n      const userInfo = await ChefApi.getUserInfo(currentUser);\n      const applications = userInfo.applications;\n      const jobId = await ChefApi.applyToJob(currentUser, job.id);\n      alert(`Applied to ${job.position} job`);\n      return {\n        success: true,\n        jobId\n      };\n    } catch (err) {\n      console.log(err);\n      return {\n        success: false,\n        errors: err\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Position: \", job.position]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hourly pay: $\", job.hourly_pay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", formatDate(job.date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: applyToJob,\n      className: \"btn btn-success btn-sm\",\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobCard, \"1JI1V1GVPLTU3xLdh2HhkyHiHGE=\");\n\n_c = JobCard;\nexport default JobCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/JobCard.js"],"names":["React","useContext","useState","Button","UserContext","ChefApi","formatDate","JobCard","job","currentUser","applied","setApplied","applyToJob","userInfo","getUserInfo","applications","jobId","id","alert","position","success","err","console","log","errors","hourly_pay","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SACIC,MADJ,QAEO,YAFP;AAGA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,UAAU,CAACG,WAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEJ,QAAMU,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,WAAR,CAAoBL,WAApB,CAAvB;AACA,YAAMM,YAAY,GAAGF,QAAQ,CAACE,YAA9B;AACA,YAAMC,KAAK,GAAG,MAAMX,OAAO,CAACO,UAAR,CAAmBH,WAAnB,EAAgCD,GAAG,CAACS,EAApC,CAApB;AACAC,MAAAA,KAAK,CAAE,cAAaV,GAAG,CAACW,QAAS,MAA5B,CAAL;AACA,aAAO;AAACC,QAAAA,OAAO,EAAE,IAAV;AAAgBJ,QAAAA;AAAhB,OAAP;AACH,KAND,CAME,OAAOK,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAO;AAACD,QAAAA,OAAO,EAAE,KAAV;AAAiBI,QAAAA,MAAM,EAAEH;AAAzB,OAAP;AACH;AACJ,GAXD;;AAaI,sBACI;AAAA,4BACI;AAAA,+BAAcb,GAAG,CAACW,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,kCAAiBX,GAAG,CAACiB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,2BAAUnB,UAAU,CAACE,GAAG,CAACkB,IAAL,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEd,UAAjB;AAA6B,MAAA,SAAS,EAAC,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;GAAML,O;;KAAAA,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport {\n    Button\n} from 'reactstrap'; \nimport UserContext from '../routes/UserContext';\nimport ChefApi from '../api/api';\nimport { formatDate } from '../utilities/utility';\n\nconst JobCard = ({ job }) => {\n    const { currentUser } = useContext(UserContext);\n    const [applied, setApplied] = useState(false);\n\nconst applyToJob = async () => {\n    try {\n        const userInfo = await ChefApi.getUserInfo(currentUser)\n        const applications = userInfo.applications\n        const jobId = await ChefApi.applyToJob(currentUser, job.id)\n        alert(`Applied to ${job.position} job`)\n        return {success: true, jobId}\n    } catch (err) {\n        console.log(err)\n        return {success: false, errors: err}\n    }\n}\n\n    return (\n        <div>\n            <p>Position: {job.position}</p>\n            <p>Hourly pay: ${job.hourly_pay}</p>\n            <p>Date: {formatDate(job.date)}</p>\n            <Button onClick={applyToJob} className=\"btn btn-success btn-sm\">Apply</Button>\n        </div> \n    )\n}\n\nexport default JobCard;"]},"metadata":{},"sourceType":"module"}