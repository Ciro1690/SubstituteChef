{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/UserSignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { FormControlLabel, TextField, Checkbox, Button } from '@material-ui/core';\nimport \"../../styles/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSignup = ({\n  registerUser\n}) => {\n  _s();\n\n  const INITIAL_DATA = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    isCompany: false\n  };\n  const [formData, setFormData] = useState(INITIAL_DATA);\n  const [errors, setErrors] = useState([]);\n  let history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const registerData = {\n      \"username\": formData.username,\n      \"password\": formData.password,\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"email\": formData.email,\n      \"isCompany\": formData.isCompany\n    };\n    const result = await registerUser(registerData);\n    let companyRedirect;\n\n    if (formData.isCompany) {\n      companyRedirect = true;\n    }\n\n    setFormData(INITIAL_DATA);\n\n    if (result.success) {\n      alert(\"Created account for Substitute Chef\");\n\n      if (companyRedirect) {\n        history.push(\"/company\");\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setErrors(result.errors);\n    }\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    console.log(name, value);\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Substitute Chef!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Username\",\n        type: \"text\",\n        name: \"username\",\n        onChange: handleChange,\n        value: formData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"First Name\",\n        type: \"text\",\n        name: \"firstName\",\n        onChange: handleChange,\n        value: formData.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Last Name\",\n        type: \"text\",\n        name: \"lastName\",\n        onChange: handleChange,\n        value: formData.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        onChange: handleChange,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: formData.isCompany,\n          checked: formData.isCompany,\n          onChange: handleChange,\n          name: \"isCompany\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 30\n        }, this),\n        label: \"Register a Company?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserSignup, \"dzeZ+YxNQHoo5Fercmc6piMT3EU=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserSignup;\nexport default UserSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignup\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/UserSignup.js"],"names":["React","useState","useHistory","FormControlLabel","TextField","Checkbox","Button","UserSignup","registerUser","INITIAL_DATA","username","password","firstName","lastName","email","isCompany","formData","setFormData","errors","setErrors","history","handleSubmit","e","preventDefault","registerData","result","companyRedirect","success","alert","push","handleChange","name","target","value","type","checked","console","log","data","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n    FormControlLabel,\n    TextField,\n    Checkbox,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\n\nconst UserSignup = ({ registerUser }) => {\n    const INITIAL_DATA = {\n        username: \"\",\n        password: \"\", \n        firstName: \"\", \n        lastName: \"\", \n        email: \"\",\n        isCompany: false\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"username\": formData.username,\n            \"password\":formData.password,\n            \"firstName\": formData.firstName,\n            \"lastName\": formData.lastName,\n            \"email\": formData.email,\n            \"isCompany\": formData.isCompany            \n        };\n        const result = await registerUser(registerData)\n\n        let companyRedirect\n        if (formData.isCompany) {\n            companyRedirect = true;\n        }\n        \n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Created account for Substitute Chef\")\n            if (companyRedirect) {\n                history.push(\"/company\")\n            }\n            else {\n                history.push(\"/\");\n            }\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        console.log(name, value)\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"register-div\">\n            <h1>Welcome to Substitute Chef!</h1>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={formData.username}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={formData.password}/>\n                <br></br>\n                <TextField\n                    required\n                    label=\"First Name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    onChange={handleChange}\n                    value={formData.firstName}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    onChange={handleChange}\n                    value={formData.lastName}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={formData.email}/>\n                    <br></br>\n                <FormControlLabel\n                    control={<Checkbox value={formData.isCompany} checked={formData.isCompany} onChange={handleChange} name=\"isCompany\" />}\n                    label=\"Register a Company?\"/><br></br>\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\" \n                    color=\"primary\">Login</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default UserSignup;"]},"metadata":{},"sourceType":"module"}