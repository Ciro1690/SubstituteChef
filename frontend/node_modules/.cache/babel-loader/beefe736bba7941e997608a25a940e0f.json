{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/EditCompany.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FormControl, FormGroup, Button } from '@material-ui/core';\nimport { editCompany } from '../utilities/utility';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCompany = ({\n  company\n}) => {\n  _s();\n\n  const {\n    id,\n    name,\n    address,\n    url\n  } = company;\n  const [formData, setFormData] = useState(null);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    if (company !== null) {\n      setFormData({\n        name: name,\n        url: url,\n        address: address\n      });\n    }\n  }, [company, name, url, address]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('submit');\n    const editData = {\n      \"name\": formData.name,\n      \"address\": formData.address,\n      \"url\": formData.url\n    };\n    await editCompany(id, editData).then(res => {\n      if (res.success) {\n        console.log('res', res);\n        const NEW_STATE = {\n          \"name\": res.company.name,\n          \"address\": res.company.address,\n          \"url\": res.company.url\n        };\n        setFormData(data => ({ ...data,\n          ...NEW_STATE\n        }));\n        alert(\"Updated company info\");\n      } else {\n        setErrors(res.errors);\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: formData === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"name\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: handleChange,\n            value: formData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"url\",\n            children: \"URL: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"url\",\n            onChange: handleChange,\n            value: formData.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"address\",\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"address\",\n            onChange: handleChange,\n            value: formData.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Edit Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditCompany, \"vsB8XqWZ8prbrxEjwJOhse3RX6Q=\");\n\n_c = EditCompany;\nexport default EditCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCompany\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/EditCompany.js"],"names":["React","useEffect","useState","FormControl","FormGroup","Button","editCompany","EditCompany","company","id","name","address","url","formData","setFormData","errors","setErrors","handleSubmit","e","preventDefault","console","log","editData","then","res","success","NEW_STATE","data","alert","handleChange","value","target","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    FormControl,\n    FormGroup,\n    Button\n} from '@material-ui/core';\nimport { editCompany } from '../utilities/utility';\n\nconst EditCompany = ({ company }) => {\n    const { id, name, address, url } = company\n    const [formData, setFormData] = useState(null);\n    const [errors, setErrors] = useState([]);\n    \n    useEffect(() => {\n        if (company !== null) {\n            setFormData({\n                name: name,\n                url: url,\n                address: address,\n            });\n        }\n    }, [company, name, url, address])\n\n    \n    const handleSubmit = async e => {\n        e.preventDefault();\n        console.log('submit')\n        const editData = {\n            \"name\": formData.name,\n            \"address\": formData.address,\n            \"url\": formData.url,\n        };\n        await editCompany(id, editData)\n            .then((res) => {\n                if (res.success) {\n                    console.log('res', res)\n                    const NEW_STATE = {\n                        \"name\": res.company.name,\n                        \"address\": res.company.address,\n                        \"url\": res.company.url\n                    }\n                    setFormData(data => ({\n                        ...data,\n                        ...NEW_STATE\n                    }))\n                    alert(\"Updated company info\")\n                }\n                else {\n                    setErrors(res.errors);\n                }\n         })\n    }\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n        {formData === null  ? <p>Loading...</p> :\n            <div>\n                <h3>{name}</h3>\n                <FormControl onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <label id=\"name\">Name: </label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={handleChange}\n                            value={formData.name}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"url\">URL: </label>\n                        <input\n                            type=\"text\"\n                            name=\"url\"\n                            onChange={handleChange}\n                            value={formData.url}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"address\">Address:</label>\n                        <input\n                            type=\"text\"\n                            name=\"address\"\n                            onChange={handleChange}\n                            value={formData.address}\n                        />\n                    </FormGroup>\n                    <Button variant=\"contained\">Edit Company</Button><br></br>\n                    <div>\n                        {errors.length ?\n                            <p>{errors}</p>\n                            : null }\n                    </div>\n                </FormControl>\n            </div>\n        }\n        </div>\n    )\n}\n\nexport default EditCompany;"]},"metadata":{},"sourceType":"module"}