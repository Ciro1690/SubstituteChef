{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/home/Map.js\";\nimport React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst Map = ({\n  companies,\n  clickedCompany,\n  setClickedCompany\n}) => {\n  const location = {\n    lat: 32.74544,\n    lng: -117.14369\n  };\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 12,\n      center: location,\n      children: [companies.map(company => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: company.lat,\n          lng: company.lng\n        },\n        labelInBackground: true,\n        label: clickedCompany.id === company.id ? company.name : null,\n        onClick: setClickedCompany(clickedCompany),\n        icon: clickedCompany.id === company.id ? 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' : null\n      }, company.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/home/Map.js"],"names":["React","GoogleMap","LoadScript","Marker","require","config","Map","companies","clickedCompany","setClickedCompany","location","lat","lng","mapStyles","height","width","process","env","REACT_APP_API_KEY","map","company","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,wBAA9C;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA;AAA7B,CAAD,KAAsD;AAE9D,QAAMC,QAAQ,GAAG;AAACC,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAjB;AACA,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,KAAK,EAAE;AAFO,GAAlB;AAKA,sBACQ,QAAC,UAAD;AACI,IAAA,gBAAgB,EAAGC,OAAO,CAACC,GAAR,CAAYC,iBADnC;AAAA,2BAEA,QAAC,SAAD;AACI,MAAA,iBAAiB,EAAKL,SAD1B;AAEI,MAAA,IAAI,EAAK,EAFb;AAGI,MAAA,MAAM,EAAKH,QAHf;AAAA,iBAMCH,SAAS,CAACY,GAAV,CAAcC,OAAO,iBAClB,QAAC,MAAD;AACI,QAAA,QAAQ,EAAE;AAACT,UAAAA,GAAG,EAAES,OAAO,CAACT,GAAd;AAAmBC,UAAAA,GAAG,EAAEQ,OAAO,CAACR;AAAhC,SADd;AAEI,QAAA,iBAAiB,EAAE,IAFvB;AAGI,QAAA,KAAK,EAAEJ,cAAc,CAACa,EAAf,KAAsBD,OAAO,CAACC,EAA9B,GAAmCD,OAAO,CAACE,IAA3C,GAAkD,IAH7D;AAII,QAAA,OAAO,EAAEb,iBAAiB,CAACD,cAAD,CAJ9B;AAKI,QAAA,IAAI,EAAEA,cAAc,CAACa,EAAf,KAAsBD,OAAO,CAACC,EAA9B,GAAmC,uDAAnC,GAA6F;AALvG,SAAaD,OAAO,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,cADH,CAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADR;AAsBH,CA9BD;;KAAMf,G;AAgCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nrequire('dotenv').config()\n\nconst Map = ({ companies, clickedCompany, setClickedCompany }) => {\n\n    const location = {lat: 32.74544, lng: -117.14369}\n    const mapStyles = {\n        height: \"70vh\",\n        width: \"100%\"\n    }\n\n    return (\n            <LoadScript\n                googleMapsApiKey= {process.env.REACT_APP_API_KEY}>\n            <GoogleMap\n                mapContainerStyle = { mapStyles }\n                zoom = { 12 }\n                center = { location } \n            >\n\n            {companies.map(company => (\n                <Marker key={company.id}\n                    position={{lat: company.lat, lng: company.lng}}\n                    labelInBackground={true}\n                    label={clickedCompany.id === company.id ? company.name : null}\n                    onClick={setClickedCompany(clickedCompany)}\n                    icon={clickedCompany.id === company.id ? 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' : null}\n                />\n                ))\n            })\n            </GoogleMap >\n            </LoadScript>\n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}