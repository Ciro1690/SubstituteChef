{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/CompaniesProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompaniesProfile = ({\n  currentUser\n}) => {\n  _s();\n\n  const [companies, setCompanies] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function getCompanies() {\n      const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n      setCompanies(userCompanies.companies);\n      console.log('test');\n      setIsLoading(false);\n    }\n\n    if (companies) getCompanies();\n  }, [companies, currentUser]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this) : companies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: company.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: company.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: company.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Edit Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, company.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this));\n};\n\n_s(CompaniesProfile, \"niGTBxyBTMpwtAUx5oAqsnDc55U=\");\n\n_c = CompaniesProfile;\nexport default CompaniesProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompaniesProfile\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/CompaniesProfile.js"],"names":["React","useState","useEffect","ChefApi","Button","CompaniesProfile","currentUser","companies","setCompanies","isLoading","setIsLoading","getCompanies","userCompanies","getCompaniesFromUsername","console","log","map","company","name","address","url","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,YAAf,GAA8B;AAC1B,YAAMC,aAAa,GAAG,MAAMT,OAAO,CAACU,wBAAR,CAAiCP,WAAjC,CAA5B;AACAE,MAAAA,YAAY,CAACI,aAAa,CAACL,SAAf,CAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACD,QAAIH,SAAJ,EACAI,YAAY;AACf,GATQ,EASN,CAACJ,SAAD,EAAYD,WAAZ,CATM,CAAT;AAWA,SACIG,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GACTF,SAAS,CAACS,GAAV,CAAcC,OAAO,iBACjB;AAAA,4BACI;AAAA,gBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKD,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAAUH,OAAO,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,UADJ,CAFJ;AAWH,CA1BD;;GAAMhB,gB;;KAAAA,gB;AA4BN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport Button from '@material-ui/core/Button';\n\nconst CompaniesProfile = ({ currentUser }) => {\n    const [companies, setCompanies] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        async function getCompanies() {\n            const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n            setCompanies(userCompanies.companies);\n            console.log('test')\n            setIsLoading(false);\n        } \n        if (companies)\n        getCompanies()\n    }, [companies, currentUser])\n\n    return (\n        isLoading ? <div>Loading...</div> :\n        companies.map(company => (\n            <div key={company.id}>\n                <h1>{company.name}</h1>\n                <h3>{company.address}</h3>\n                <h3>{company.url}</h3>\n                <Button variant=\"contained\" color=\"primary\">Edit Company</Button>\n            </div>\n        ))\n    )\n}\n\nexport default CompaniesProfile;"]},"metadata":{},"sourceType":"module"}