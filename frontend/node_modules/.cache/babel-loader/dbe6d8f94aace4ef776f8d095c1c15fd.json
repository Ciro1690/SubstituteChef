{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CompanyCard from './CompanyCard';\nimport testData from './RestaurantData';\nimport ChefApi from '../api/api';\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyList = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [clickedCompany, setClickedCompany] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    async function getCompanies() {\n      let companies = await ChefApi.getAllCompanies();\n      setCompanies(companies);\n      setIsLoaded(true);\n    }\n\n    getCompanies();\n  }, []);\n\n  const getCompanyInfo = async () => {\n    try {\n      const companyData = await ChefApi.getAllCompanies();\n      setCompanies(companyData);\n      setIsLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [!isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this) : null, isLoaded && companies.length > 0 ? companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n        company: company,\n        clickedCompany: clickedCompany,\n        setClickedCompany: setClickedCompany\n      }, company.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)) : getCompanyInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        clickedCompany: clickedCompany\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyList, \"GWodLR0GWDRnasIVjE5nGFaZ6Yg=\");\n\n_c = CompanyList;\nexport default CompanyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyList.js"],"names":["React","useEffect","useState","CompanyCard","testData","ChefApi","Map","CompanyList","companies","setCompanies","clickedCompany","setClickedCompany","isLoaded","setIsLoaded","getCompanies","getAllCompanies","getCompanyInfo","companyData","err","console","log","length","map","company","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAea,YAAf,GAA8B;AAC1B,UAAIN,SAAS,GAAG,MAAMH,OAAO,CAACU,eAAR,EAAtB;AACAN,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAK,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACDC,IAAAA,YAAY;AACf,GAPQ,EAON,EAPM,CAAT;;AASA,QAAME,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMC,WAAW,GAAG,MAAMZ,OAAO,CAACU,eAAR,EAA1B;AACIN,MAAAA,YAAY,CAACQ,WAAD,CAAZ;AACAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACP,KAJD,CAKA,OAAOK,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACK,CAACN,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,GAAoC,IADzC,EAEKA,QAAQ,IAAIJ,SAAS,CAACa,MAAV,GAAmB,CAA/B,GACDb,SAAS,CAACc,GAAV,CAAcC,OAAO,iBACjB,QAAC,WAAD;AAEI,QAAA,OAAO,EAAEA,OAFb;AAGI,QAAA,cAAc,EAAEb,cAHpB;AAII,QAAA,iBAAiB,EAAEC;AAJvB,SACSY,OAAO,CAACC,EADjB;AAAA;AAAA;AAAA;AAAA,cADJ,CADC,GASCR,cAAc,EAXpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,cAAc,EAAEN;AADpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAjDD;;GAAMH,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CompanyCard from './CompanyCard';\nimport testData from './RestaurantData';\nimport ChefApi from '../api/api';\nimport Map from './Map';\n\nconst CompanyList = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [clickedCompany, setClickedCompany] = useState({});\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        async function getCompanies() {\n            let companies = await ChefApi.getAllCompanies();\n            setCompanies(companies);\n            setIsLoaded(true);\n        }\n        getCompanies();\n    }, []);\n\n    const getCompanyInfo = async () => {\n        try {\n            const companyData = await ChefApi.getAllCompanies()\n                setCompanies(companyData)\n                setIsLoaded(true)\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                {!isLoaded ? <div>Loading...</div> : null}\n                {isLoaded && companies.length > 0 ?\n                companies.map(company => (\n                    <CompanyCard\n                        key={company.id}\n                        company={company}\n                        clickedCompany={clickedCompany}\n                        setClickedCompany={setClickedCompany}\n                    />\n                )) \n                : getCompanyInfo()\n                }\n            </div>\n            <div className=\"row\">\n                <Map \n                    clickedCompany={clickedCompany}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default CompanyList;"]},"metadata":{},"sourceType":"module"}