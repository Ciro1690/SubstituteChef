{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst Map = ({\n  companies\n}) => {\n  _s();\n\n  const [coordinates, setCoordinates] = useState([]);\n\n  const getCoordinates = async () => {\n    let coordsArr = [];\n\n    for (let company of companies) {\n      const location = company.address;\n      await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n        params: {\n          address: location,\n          key: process.env.REACT_APP_API_KEY\n        }\n      }).then(function (response) {\n        let location = response.data.results[0].geometry.location;\n        let coordinates = [company.name, location.lat, location.lng];\n        coordsArr.push(coordinates);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    console.log(coordsArr);\n    return coordsArr;\n  };\n\n  const coordsObj = getCoordinates();\n  console.log(coordsObj);\n  const location = {\n    lat: 32.74544,\n    lng: -117.14369\n  };\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n  return Object.keys(companies).length !== 0 ? /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: location,\n      children: [coordsArr.map(coord => /*#__PURE__*/_jsxDEV(Marker, {\n        position: coord.value\n      }, coord.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-empty\",\n    children: \"Click a Company card to load the map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Map, \"tEVF8+bDlMrQ6mrJOrcZsN2wGrE=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/Map.js"],"names":["React","useState","GoogleMap","LoadScript","Marker","axios","require","config","Map","companies","coordinates","setCoordinates","getCoordinates","coordsArr","company","location","address","get","params","key","process","env","REACT_APP_API_KEY","then","response","data","results","geometry","name","lat","lng","push","catch","error","console","log","coordsObj","mapStyles","height","width","Object","keys","length","map","coord","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,wBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA;;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMW,cAAc,GAAG,YAAY;AAC/B,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,OAAT,IAAoBL,SAApB,EAA+B;AAC3B,YAAMM,QAAQ,GAAGD,OAAO,CAACE,OAAzB;AACA,YAAMX,KAAK,CAACY,GAAN,CAAU,mDAAV,EAA+D;AACjEC,QAAAA,MAAM,EAAC;AACHF,UAAAA,OAAO,EAAED,QADN;AAEHI,UAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFd;AAD0D,OAA/D,EAMLC,IANK,CAMA,UAASC,QAAT,EAAkB;AACpB,YAAIT,QAAQ,GAAGS,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkCZ,QAAjD;AACA,YAAIL,WAAW,GAAG,CAACI,OAAO,CAACc,IAAT,EAAeb,QAAQ,CAACc,GAAxB,EAA6Bd,QAAQ,CAACe,GAAtC,CAAlB;AACAjB,QAAAA,SAAS,CAACkB,IAAV,CAAerB,WAAf;AACH,OAVK,EAWLsB,KAXK,CAWC,UAASC,KAAT,EAAgB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAbK,CAAN;AAcH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,SAAZ;AACA,WAAOA,SAAP;AACH,GArBD;;AAsBA,QAAMuB,SAAS,GAAGxB,cAAc,EAAhC;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,QAAMrB,QAAQ,GAAG;AAACc,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAjB;AACA,QAAMO,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,KAAK,EAAE;AAFO,GAAlB;AAKA,SACIC,MAAM,CAACC,IAAP,CAAYhC,SAAZ,EAAuBiC,MAAvB,KAAkC,CAAlC,gBACI,QAAC,UAAD;AACI,IAAA,gBAAgB,EAAGtB,OAAO,CAACC,GAAR,CAAYC,iBADnC;AAAA,2BAEA,QAAC,SAAD;AACI,MAAA,iBAAiB,EAAKe,SAD1B;AAEI,MAAA,IAAI,EAAK,EAFb;AAGI,MAAA,MAAM,EAAKtB,QAHf;AAAA,iBAKCF,SAAS,CAAC8B,GAAV,CAAcC,KAAK,iBAChB,QAAC,MAAD;AAEI,QAAA,QAAQ,EAAEA,KAAK,CAACC;AAFpB,SACSD,KAAK,CAACzB,GADf;AAAA;AAAA;AAAA;AAAA,cADH,CALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ,gBAiBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBR;AAoBH,CArDD;;GAAMX,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nrequire('dotenv').config()\n\nconst Map = ({companies}) => {\n    const [coordinates, setCoordinates] = useState([])\n\n    const getCoordinates = async () => {\n        let coordsArr = [];\n        for (let company of companies) {\n            const location = company.address\n            await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n                params:{\n                    address: location,\n                    key: process.env.REACT_APP_API_KEY\n                }\n            })\n            .then(function(response){\n                let location = response.data.results[0].geometry.location\n                let coordinates = [company.name, location.lat, location.lng]\n                coordsArr.push(coordinates)           \n            })\n            .catch(function(error) {\n                console.log(error)\n            }) \n        }\n        console.log(coordsArr)\n        return coordsArr\n    }\n    const coordsObj = getCoordinates()\n    console.log(coordsObj)\n    const location = {lat: 32.74544, lng: -117.14369}\n    const mapStyles = {\n        height: \"70vh\",\n        width: \"100%\"\n    }\n\n    return (\n        Object.keys(companies).length !== 0  ?\n            <LoadScript\n                googleMapsApiKey= {process.env.REACT_APP_API_KEY}>\n            <GoogleMap\n                mapContainerStyle = { mapStyles }\n                zoom = { 13 }\n                center = { location } \n            >\n            {coordsArr.map(coord => (\n                <Marker \n                    key={coord.key} \n                    position={coord.value} />\n            ))\n            })\n            </GoogleMap >\n            </LoadScript>\n            :\n            <div className=\"mobile-empty\">Click a Company card to load the map</div>\n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}