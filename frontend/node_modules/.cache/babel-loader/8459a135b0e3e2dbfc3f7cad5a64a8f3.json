{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/Companies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Companies = ({\n  currentUser\n}) => {\n  _s();\n\n  const [companies, setCompanies] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  useEffect(() => {\n    async function getCompanies() {\n      const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n      setCompanies(userCompanies.companies);\n      setIsLoading(false);\n      console.log(companies);\n    }\n\n    getCompanies();\n  }, [companies, currentUser]);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this) : // companies.map(company => (\n  //     <div key={company.id}>\n  //         <h1>{company.name}</h1>\n  //         <h3>{company.address}</h3>\n  //         <h3>{company.url}</h3>\n  //         <a href=\"/editcompany\"><button>Edit company</button></a>\n  //     </div>\n  // ))\n  null;\n};\n\n_s(Companies, \"XKpIVM9BP9kOo16hoWF3CdO+qfA=\");\n\n_c = Companies;\nexport default Companies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/Companies.js"],"names":["React","useState","useEffect","ChefApi","Companies","currentUser","companies","setCompanies","isLoading","setIsLoading","getCompanies","userCompanies","getCompaniesFromUsername","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,YAAf,GAA8B;AAC1B,YAAMC,aAAa,GAAG,MAAMR,OAAO,CAACS,wBAAR,CAAiCP,WAAjC,CAA5B;AACAE,MAAAA,YAAY,CAACI,aAAa,CAACL,SAAf,CAAZ;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACH;;AAACI,IAAAA,YAAY;AACjB,GAPQ,EAON,CAACJ,SAAD,EAAYD,WAAZ,CAPM,CAAT;AAUA,SACIG,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAVJ;AAYH,CA1BD;;GAAMJ,S;;KAAAA,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\n\nconst Companies = ({ currentUser }) => {\n    const [companies, setCompanies] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n\n    useEffect(() => {\n        async function getCompanies() {\n            const userCompanies = await ChefApi.getCompaniesFromUsername(currentUser);\n            setCompanies(userCompanies.companies);\n            setIsLoading(false);\n            console.log(companies)\n        } getCompanies()\n    }, [companies, currentUser])\n\n\n    return (\n        isLoading ? <div>Loading...</div> :\n        // companies.map(company => (\n        //     <div key={company.id}>\n        //         <h1>{company.name}</h1>\n        //         <h3>{company.address}</h3>\n        //         <h3>{company.url}</h3>\n        //         <a href=\"/editcompany\"><button>Edit company</button></a>\n        //     </div>\n        // ))\n        null\n    )\n}\n\nexport default Companies;"]},"metadata":{},"sourceType":"module"}