{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/routes/Routes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from '../home/Home';\nimport CompanyList from '../search/CompanyList';\nimport NavBar from '../nav/NavBar';\nimport Login from '../auth/Login';\nimport UserSignup from '../auth/UserSignup';\nimport CompanySignup from '../companies/CompanySignup';\nimport UserContext from \"./UserContext\";\nimport ProtectedRoute from './ProtectedRoute';\nimport Profile from '../auth/Profile';\nimport CompanyProfile from '../companies/CompanyProfile';\nimport Applications from '../jobs/Applications';\nimport JobSignup from '../jobs/JobSignup';\nimport ChefApi from '../api/api';\nimport jwt from 'jsonwebtoken';\nimport EditCompany from \"../companies/EditCompany\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routes = () => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [companies, setCompanies] = useState(null);\n\n  const registerUser = async formData => {\n    try {\n      const token = await ChefApi.Signup(formData);\n      setCurrentUser(formData.username);\n      setToken(token);\n      localStorage.setItem('token', token);\n      return {\n        success: true\n      };\n    } catch (err) {\n      return {\n        success: false,\n        errors: err\n      };\n    }\n  };\n\n  const LogIn = async formData => {\n    try {\n      const token = await ChefApi.Login(formData);\n      setCurrentUser(formData.username);\n      setToken(token);\n      localStorage.setItem('token', token);\n      return {\n        success: true\n      };\n    } catch (err) {\n      return {\n        success: false,\n        errors: err\n      };\n    }\n  };\n\n  const LogOut = () => {\n    setCurrentUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  useEffect(function getUserInfo() {\n    async function getCurrentUser() {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt.decode(token);\n          ChefApi.token = token;\n          const user = await ChefApi.getUserInfo(username);\n          const userCompanies = await ChefApi.getCompaniesFromUsername(username);\n          setCurrentUser(username);\n          setUserInfo(user);\n          setCompanies(userCompanies.companies);\n        } catch (e) {\n          console.log(e);\n          setCurrentUser(null);\n        }\n      }\n    }\n\n    getCurrentUser();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        currentUser,\n        token,\n        userInfo,\n        setUserInfo\n      },\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        LogOut: LogOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/search\",\n          children: /*#__PURE__*/_jsxDEV(CompanyList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(UserSignup, {\n            registerUser: registerUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            LogIn: LogIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/applications\",\n          children: /*#__PURE__*/_jsxDEV(Applications, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(Profile, {\n            companies: companies,\n            setUserInfo: setUserInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/companyprofile\",\n          children: /*#__PURE__*/_jsxDEV(CompanyProfile, {\n            companies: companies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/editcompany\",\n          children: /*#__PURE__*/_jsxDEV(EditCompany, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/job\",\n          children: /*#__PURE__*/_jsxDEV(JobSignup, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/company\",\n          children: /*#__PURE__*/_jsxDEV(CompanySignup, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I can't seem to find what you want\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routes, \"cD/JesyXN9Cz99tSp8+rDymbVmU=\");\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/routes/Routes.js"],"names":["React","useEffect","useState","BrowserRouter","Route","Switch","Home","CompanyList","NavBar","Login","UserSignup","CompanySignup","UserContext","ProtectedRoute","Profile","CompanyProfile","Applications","JobSignup","ChefApi","jwt","EditCompany","Routes","token","setToken","currentUser","setCurrentUser","userInfo","setUserInfo","companies","setCompanies","registerUser","formData","Signup","username","localStorage","setItem","success","err","errors","LogIn","LogOut","removeItem","getUserInfo","getCurrentUser","getItem","decode","user","userCompanies","getCompaniesFromUsername","e","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from '../home/Home';\nimport CompanyList from '../search/CompanyList';\nimport NavBar from '../nav/NavBar';\nimport Login from '../auth/Login';\nimport UserSignup from '../auth/UserSignup';\nimport CompanySignup from '../companies/CompanySignup';\nimport UserContext from \"./UserContext\";\nimport ProtectedRoute from './ProtectedRoute';\nimport Profile from '../auth/Profile';\nimport CompanyProfile from '../companies/CompanyProfile';\nimport Applications from '../jobs/Applications';\nimport JobSignup from '../jobs/JobSignup';\nimport ChefApi from '../api/api';\nimport jwt from 'jsonwebtoken';\nimport EditCompany from \"../companies/EditCompany\";\n\nconst Routes = () => {\n\n    const [token, setToken] = useState(null);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userInfo, setUserInfo] = useState(null);\n    const [companies, setCompanies] = useState(null);\n\n    const registerUser = async formData => {\n        try {\n            const token = await ChefApi.Signup(formData)\n            setCurrentUser(formData.username)\n            setToken(token)\n            localStorage.setItem('token', token);\n            return {success: true}\n        } catch (err) {\n            return {success: false, errors: err}\n        }\n    }\n\n    const LogIn = async formData => {\n        try {\n            const token = await ChefApi.Login(formData)\n            setCurrentUser(formData.username)\n            setToken(token)\n            localStorage.setItem('token', token);\n            return {success: true}\n        } catch (err) {\n            return {success: false, errors: err}\n        }\n    }\n\n    const LogOut = () => {\n        setCurrentUser(null)\n        setToken(null)\n        localStorage.removeItem('token');\n    }\n\n    useEffect(function getUserInfo() {\n        async function getCurrentUser() {\n            const token = localStorage.getItem('token');\n            if (token) {\n                try {\n                    let { username } = jwt.decode(token);\n                    ChefApi.token = token;\n                    const user= await ChefApi.getUserInfo(username);\n                    const userCompanies = await ChefApi.getCompaniesFromUsername(username);\n                    setCurrentUser(username)\n                    setUserInfo(user)\n                    setCompanies(userCompanies.companies)\n                }\n                catch (e) {\n                    console.log(e)\n                    setCurrentUser(null)\n                }\n            }\n        } getCurrentUser()\n    }, [token]) \n\n    return (\n        <BrowserRouter>\n            <UserContext.Provider value={{ currentUser, token, userInfo, setUserInfo }}>\n                <NavBar LogOut={LogOut}/>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route exact path=\"/search\">\n                        <CompanyList />\n                    </Route>\n                    <Route exact path=\"/signup\">\n                        <UserSignup registerUser={registerUser}/>\n                    </Route>\n                    <Route exact path=\"/login\">\n                        <Login LogIn= {LogIn} />\n                    </Route>\n                    <Route exact path=\"/applications\">\n                        <Applications currentUser={currentUser} />\n                    </Route>\n                    <ProtectedRoute exact path=\"/profile\">\n                        <Profile companies={companies} setUserInfo={setUserInfo}/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/companyprofile\">\n                        <CompanyProfile companies={companies} />\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/editcompany\">\n                        <EditCompany/>\n                    </ProtectedRoute>\n                    <ProtectedRoute exact path=\"/job\">\n                        <JobSignup  currentUser={currentUser} />\n                    </ProtectedRoute> \n                    <ProtectedRoute exact path=\"/company\">\n                        <CompanySignup currentUser={currentUser}/>\n                    </ProtectedRoute>\n                    <Route>\n                        <p>I can't seem to find what you want</p>\n                    </Route>\n                </Switch>\n            </UserContext.Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}