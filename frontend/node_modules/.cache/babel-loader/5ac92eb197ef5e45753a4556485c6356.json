{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/Map.js\";\nimport React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst Map = ({\n  clickedCompany\n}) => {\n  Geocode.setLanguage(\"en\");\n  Geocode.fromAddress(\"Eiffel Tower\").then(response => {\n    const {\n      lat,\n      lng\n    } = response.results[0].geometry.location;\n    console.log(lat, lng);\n  }, error => {\n    console.error(error);\n  });\n  const location = {\n    lat: clickedCompany.latitude,\n    lng: clickedCompany.longitude\n  };\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n  return Object.keys(clickedCompany).length !== 0 ? /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: location,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: location\n      }, clickedCompany.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-empty\",\n    children: \"Click a Company card to load the map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/Map.js"],"names":["React","GoogleMap","LoadScript","Marker","require","config","Map","clickedCompany","Geocode","setLanguage","fromAddress","then","response","lat","lng","results","geometry","location","console","log","error","latitude","longitude","mapStyles","height","width","Object","keys","length","process","env","REACT_APP_API_KEY","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,wBAA9C;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAsB;AAC9BC,EAAAA,OAAO,CAACC,WAAR,CAAoB,IAApB;AAEAD,EAAAA,OAAO,CAACE,WAAR,CAAoB,cAApB,EAAoCC,IAApC,CACKC,QAAD,IAAc;AACV,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAeF,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAAlD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EAAiBC,GAAjB;AACH,GAJL,EAKKM,KAAD,IAAW;AACPF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH,GAPL;AAUA,QAAMH,QAAQ,GAAG;AAACJ,IAAAA,GAAG,EAAEN,cAAc,CAACc,QAArB;AAA+BP,IAAAA,GAAG,EAAEP,cAAc,CAACe;AAAnD,GAAjB;AACA,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,KAAK,EAAE;AAFO,GAAlB;AAKA,SACIC,MAAM,CAACC,IAAP,CAAYpB,cAAZ,EAA4BqB,MAA5B,KAAuC,CAAvC,gBACI,QAAC,UAAD;AACI,IAAA,gBAAgB,EAAGC,OAAO,CAACC,GAAR,CAAYC,iBADnC;AAAA,2BAEA,QAAC,SAAD;AACI,MAAA,iBAAiB,EAAKR,SAD1B;AAEI,MAAA,IAAI,EAAK,EAFb;AAGI,MAAA,MAAM,EAAKN,QAHf;AAAA,8BAMI,QAAC,MAAD;AAEI,QAAA,QAAQ,EAAEA;AAFd,SACSV,cAAc,CAACyB,IADxB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ,gBAgBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAjBR;AAmBH,CAtCD;;KAAM1B,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nrequire('dotenv').config()\n\nconst Map = ({clickedCompany}) => {\n    Geocode.setLanguage(\"en\");\n\n    Geocode.fromAddress(\"Eiffel Tower\").then(\n        (response) => {\n            const { lat, lng } = response.results[0].geometry.location;\n            console.log(lat, lng);\n        },\n        (error) => {\n            console.error(error);\n        }\n    );\n\n    const location = {lat: clickedCompany.latitude, lng: clickedCompany.longitude}\n    const mapStyles = {\n        height: \"70vh\",\n        width: \"100%\"\n    }\n\n    return (\n        Object.keys(clickedCompany).length !== 0  ?\n            <LoadScript\n                googleMapsApiKey= {process.env.REACT_APP_API_KEY}>\n            <GoogleMap\n                mapContainerStyle = { mapStyles }\n                zoom = { 13 }\n                center = { location } \n            >\n            {\n                <Marker \n                    key={clickedCompany.name} \n                    position={location} />\n            })\n            </GoogleMap >\n            </LoadScript>\n            :\n            <div className=\"mobile-empty\">Click a Company card to load the map</div>\n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}