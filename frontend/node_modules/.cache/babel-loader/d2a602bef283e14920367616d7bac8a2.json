{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport testData from './RestaurantData';\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyList = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [clickedCompany, setClickedRestaurant] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getRestaurantInfo = () => {\n    try {\n      setRestaurants(testData);\n      setIsLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [!isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this) : null, isLoaded && restaurants.length > 0 ? restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n        restaurant: restaurant,\n        clickedRestaurant: clickedRestaurant,\n        setClickedRestaurant: setClickedRestaurant\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)) : getRestaurantInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        clickedRestaurant: clickedRestaurant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyList, \"vr3l2rhHyNmV5oMfV7/GBOueWFk=\");\n\n_c = CompanyList;\nexport default CompanyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyList.js"],"names":["React","useState","RestaurantCard","testData","Map","CompanyList","companies","setCompanies","clickedCompany","setClickedRestaurant","isLoaded","setIsLoaded","getRestaurantInfo","setRestaurants","err","console","log","restaurants","length","map","restaurant","clickedRestaurant","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,oBAAjB,IAAyCR,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,iBAAiB,GAAG,MAAM;AAC5B,QAAI;AACAC,MAAAA,cAAc,CAACV,QAAD,CAAd;AACAQ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD,CAIA,OAAOG,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACK,CAACJ,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,GAAoC,IADzC,EAEKA,QAAQ,IAAIO,WAAW,CAACC,MAAZ,GAAqB,CAAjC,GACDD,WAAW,CAACE,GAAZ,CAAgBC,UAAU,iBACtB,QAAC,cAAD;AAEI,QAAA,UAAU,EAAEA,UAFhB;AAGI,QAAA,iBAAiB,EAAEC,iBAHvB;AAII,QAAA,oBAAoB,EAAEZ;AAJ1B,SACSW,UAAU,CAACE,EADpB;AAAA;AAAA;AAAA;AAAA,cADJ,CADC,GASCV,iBAAiB,EAXvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,iBAAiB,EAAES;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCD;;GAAMhB,W;;KAAAA,W;AAyCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport testData from './RestaurantData';\nimport Map from './Map';\n\nconst CompanyList = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [clickedCompany, setClickedRestaurant] = useState({});\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const getRestaurantInfo = () => {\n        try {\n            setRestaurants(testData);\n            setIsLoaded(true);\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                {!isLoaded ? <div>Loading...</div> : null}\n                {isLoaded && restaurants.length > 0 ?\n                restaurants.map(restaurant => (\n                    <RestaurantCard\n                        key={restaurant.id}\n                        restaurant={restaurant}\n                        clickedRestaurant={clickedRestaurant}\n                        setClickedRestaurant={setClickedRestaurant}\n                    />\n                )) \n                : getRestaurantInfo()\n                }\n            </div>\n            <div className=\"row\">\n                <Map \n                    clickedRestaurant={clickedRestaurant}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default CompanyList;"]},"metadata":{},"sourceType":"module"}