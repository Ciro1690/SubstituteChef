{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport '../../styles/CompanyCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyCard = ({\n  company,\n  setClickedCompany,\n  clickedCompany\n}) => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [error, setError] = useState(\"\");\n  const {\n    name,\n    url,\n    address\n  } = company;\n\n  async function toggleJobs() {\n    if (Object.keys(clickedCompany).length === 0) {\n      setClickedCompany(company);\n\n      try {\n        const jobList = await getJobsForCompany(company.id);\n        setJobs(jobList.jobs);\n      } catch (err) {\n        console.log(err);\n        setError(\"No jobs to display\");\n      }\n    } else {\n      setClickedCompany({});\n      setJobs([]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clickedCompany.name === name ? \"selected-card\" : \"inner-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"blank\",\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark btn-sm\",\n        onClick: toggleJobs,\n        children: \"Open Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyCard, \"vghCILhQHOIS6DU+cnJF5s5cAyo=\");\n\n_c = CompanyCard;\nexport default CompanyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyCard.js"],"names":["React","useState","getJobsForCompany","JobCard","CompanyCard","company","setClickedCompany","clickedCompany","jobs","setJobs","error","setError","name","url","address","toggleJobs","Object","keys","length","jobList","id","err","console","log","map","job"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,8BAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA;AAA9B,CAAD,KAAoD;AAAA;;AACpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAyBT,OAA/B;;AAEA,iBAAeU,UAAf,GAA4B;AACxB,QAAIC,MAAM,CAACC,IAAP,CAAYV,cAAZ,EAA4BW,MAA5B,KAAuC,CAA3C,EAA8C;AAC1CZ,MAAAA,iBAAiB,CAACD,OAAD,CAAjB;;AACA,UAAI;AACA,cAAMc,OAAO,GAAG,MAAMjB,iBAAiB,CAACG,OAAO,CAACe,EAAT,CAAvC;AACAX,QAAAA,OAAO,CAACU,OAAO,CAACX,IAAT,CAAP;AACH,OAHD,CAIA,OAAOa,GAAP,EAAY;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,QAAAA,QAAQ,CAAC,oBAAD,CAAR;AACH;AACJ,KAVD,MAUO;AACHL,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEF,cAAc,CAACK,IAAf,KAAwBA,IAAxB,GAA+B,eAA/B,GAAiD,YAAjE;AAAA,8BACI;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,IAAI,EAAED,GAAT;AAAc,QAAA,MAAM,EAAC,OAArB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAG0C;AAAA;AAAA;AAAA;AAAA,cAH1C,eAII;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEE,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKP,IAAI,CAACU,MAAL,GAAc,CAAd,GACDV,IAAI,CAACgB,GAAL,CAASC,GAAG,iBACR,QAAC,OAAD;AAAsB,QAAA,GAAG,EAAEA;AAA3B,SAAcA,GAAG,CAACL,EAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,CADC,gBAIC;AAAA,kBAAIV;AAAJ;AAAA;AAAA;AAAA;AAAA,cATN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArCD;;GAAMN,W;;KAAAA,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport '../../styles/CompanyCard.css';\n\nconst CompanyCard = ({ company, setClickedCompany, clickedCompany }) => {\n    const [jobs, setJobs] = useState([]);\n    const [error, setError] = useState(\"\");\n    const { name, url, address } = company;\n\n    async function toggleJobs() {\n        if (Object.keys(clickedCompany).length === 0) {\n            setClickedCompany(company);\n            try {\n                const jobList = await getJobsForCompany(company.id)\n                setJobs(jobList.jobs)\n            }   \n            catch (err) {\n                console.log(err)\n                setError(\"No jobs to display\")\n            }\n        } else {\n            setClickedCompany({});\n            setJobs([]);\n        }\n    }\n\n    return (\n        <div className=\"company-card\">\n            <div className={clickedCompany.name === name ? \"selected-card\" : \"inner-card\"}>\n                <h1>{name}</h1>\n                <h3>{address}</h3>\n                <a href={url} target=\"blank\">{url}</a><br></br>\n                <button className=\"btn btn-dark btn-sm\" onClick={toggleJobs}>Open Jobs</button>\n                {jobs.length > 0 ?\n                jobs.map(job => (\n                    <JobCard key={job.id} job={job}/>\n                ))\n                : <p>{error}</p>}\n            </div>\n        </div> \n    )\n}\n\nexport default CompanyCard;"]},"metadata":{},"sourceType":"module"}