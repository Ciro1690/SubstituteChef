{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport UserContext from '../routes/UserContext';\nimport '../../styles/CompanyCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyCard = ({\n  company,\n  setClickedCompany,\n  clickedCompany\n}) => {\n  _s();\n\n  const currentUser = useContext(UserContext);\n  const [jobs, setJobs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    id,\n    name,\n    url,\n    address\n  } = company;\n  useEffect(() => {\n    async function getJobs() {\n      let jobList = await getJobsForCompany(id);\n\n      if (jobList.success) {\n        setJobs(jobList.jobs);\n      }\n\n      setIsLoading(false);\n    }\n\n    getJobs();\n  }, [id]);\n\n  const setCompany = () => {\n    setClickedCompany(company);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-card container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: setCompany,\n      className: clickedCompany.name === name ? \"selected-card row\" : \"inner-card row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company-info col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            target: \"blank\",\n            children: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), currentUser.currentUser == null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), jobs.length > 0 ? jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No jobs to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyCard, \"5W16UxFcy9E/YJRkgkZ1j/xuA4E=\");\n\n_c = CompanyCard;\nexport default CompanyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCard\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyCard.js"],"names":["React","useState","useEffect","useContext","getJobsForCompany","JobCard","UserContext","CompanyCard","company","setClickedCompany","clickedCompany","currentUser","jobs","setJobs","isLoading","setIsLoading","id","name","url","address","getJobs","jobList","success","setCompany","length","map","job"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,8BAAP;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA;AAA9B,CAAD,KAAoD;AAAA;;AACpE,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEe,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,GAAZ;AAAiBC,IAAAA;AAAjB,MAA6BX,OAAnC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAekB,OAAf,GAAyB;AACrB,UAAIC,OAAO,GAAG,MAAMjB,iBAAiB,CAACY,EAAD,CAArC;;AACA,UAAIK,OAAO,CAACC,OAAZ,EAAqB;AACjBT,QAAAA,OAAO,CAACQ,OAAO,CAACT,IAAT,CAAP;AACH;;AACDG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDK,IAAAA,OAAO;AACV,GATQ,EASN,CAACJ,EAAD,CATM,CAAT;;AAWA,QAAMO,UAAU,GAAG,MAAM;AACrBd,IAAAA,iBAAiB,CAACD,OAAD,CAAjB;AACH,GAFD;;AAIA,MAAIM,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACI;AAAK,MAAA,OAAO,EAAES,UAAd;AAA0B,MAAA,SAAS,EAAEb,cAAc,CAACO,IAAf,KAAwBA,IAAxB,GAA+B,mBAA/B,GAAqD,gBAA1F;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,iCAAI;AAAG,YAAA,IAAI,EAAED,GAAT;AAAc,YAAA,MAAM,EAAC,OAArB;AAAA,sBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKP,WAAW,CAACA,WAAZ,IAA2B,IAA3B,GAAkC,IAAlC,gBAED;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKC,IAAI,CAACY,MAAL,GAAc,CAAd,GAAkBZ,IAAI,CAACa,GAAL,CAASC,GAAG,iBAC3B,QAAC,OAAD;AAAsB,UAAA,GAAG,EAAEA;AAA3B,WAAcA,GAAG,CAACV,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADe,CAAlB,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA7CD;;GAAMT,W;;KAAAA,W;AA+CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { getJobsForCompany } from '../utilities/utility';\nimport JobCard from \"./JobCard\";\nimport UserContext from '../routes/UserContext';\nimport '../../styles/CompanyCard.css';\n\nconst CompanyCard = ({ company, setClickedCompany, clickedCompany }) => {\n    const currentUser = useContext(UserContext);\n    const [jobs, setJobs] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const { id, name, url, address } = company;\n\n    useEffect(() => {\n        async function getJobs() {\n            let jobList = await getJobsForCompany(id);\n            if (jobList.success) {\n                setJobs(jobList.jobs);\n            } \n            setIsLoading(false);\n        }\n        getJobs();\n    }, [id]);\n\n    const setCompany = () => {\n        setClickedCompany(company)\n    }\n\n    if (isLoading) {\n        return <p>Loading</p>\n    }\n\n    return (\n        <div className=\"company-card container\">\n            <div onClick={setCompany} className={clickedCompany.name === name ? \"selected-card row\" : \"inner-card row\"}>\n                <div className=\"company-info col\">\n                    <h1>{name}</h1>\n                    <h4>{address}</h4>\n                    <h5><a href={url} target=\"blank\">{url}</a></h5>\n                </div>\n                {currentUser.currentUser == null ? null \n                :\n                <div className=\"col\">\n                    <h5>Jobs</h5>\n                    {jobs.length > 0 ? jobs.map(job => (\n                        <JobCard key={job.id} job={job}/>\n                    )) : <p>No jobs to display</p>}\n                </div>\n                 }\n            </div>\n        </div> \n    )\n}\n\nexport default CompanyCard;"]},"metadata":{},"sourceType":"module"}