{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst Map = ({\n  companies,\n  clickedCompany\n}) => {\n  _s();\n\n  const [coordinates, setCoordinates] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false); // useEffect(() => {\n  //     async function loadCoordinates() {\n  //         let coordsArr = [];\n  //         for (let company of companies) {\n  //             const location = company.address\n  //             await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n  //                 params:{\n  //                     address: location,\n  //                     key: process.env.REACT_APP_API_KEY\n  //                 }\n  //             })\n  //                 .then(function(response){\n  //                     let location = response.data.results[0].geometry.location\n  //                     let coordinates = [company.id.toString(), {lat: location.lat, lng: location.lng}]\n  //                     coordsArr.push(coordinates)      \n  //                 })\n  //                 .catch(function(error) {\n  //                     console.log(error)\n  //                 }) \n  //         }\n  //         setCoordinates(coordsArr);\n  //         setIsLoaded(true)\n  //     }\n  //     loadCoordinates();\n  // }, [companies]);\n\n  const location = {\n    lat: 32.74544,\n    lng: -117.14369\n  };\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n  return isLoaded ? /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: location,\n      children: [companies.map(company => /*#__PURE__*/_jsxDEV(Marker, {\n        label: company.coord[0],\n        position: company.coord[1],\n        labelInBackground: true,\n        color: clickedCompany.id === company.id ? 'blue' : 'red'\n      }, companycoord[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Map, \"fGZo34Mb4d0S1bb0z2FZhtrI5B4=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/Map.js"],"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","axios","require","config","Map","companies","clickedCompany","coordinates","setCoordinates","isLoaded","setIsLoaded","location","lat","lng","mapStyles","height","width","process","env","REACT_APP_API_KEY","map","company","coord","id","companycoord"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,wBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAmC;AAAA;;AAE3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC,CAH2C,CAK3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMe,QAAQ,GAAG;AAACC,IAAAA,GAAG,EAAE,QAAN;AAAgBC,IAAAA,GAAG,EAAE,CAAC;AAAtB,GAAjB;AACA,QAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdC,IAAAA,KAAK,EAAE;AAFO,GAAlB;AAKA,SACIP,QAAQ,gBACJ,QAAC,UAAD;AACI,IAAA,gBAAgB,EAAGQ,OAAO,CAACC,GAAR,CAAYC,iBADnC;AAAA,2BAEA,QAAC,SAAD;AACI,MAAA,iBAAiB,EAAKL,SAD1B;AAEI,MAAA,IAAI,EAAK,EAFb;AAGI,MAAA,MAAM,EAAKH,QAHf;AAAA,iBAKCN,SAAS,CAACe,GAAV,CAAcC,OAAO,iBAClB,QAAC,MAAD;AACI,QAAA,KAAK,EAAEA,OAAO,CAACC,KAAR,CAAc,CAAd,CADX;AAEI,QAAA,QAAQ,EAAED,OAAO,CAACC,KAAR,CAAc,CAAd,CAFd;AAGI,QAAA,iBAAiB,EAAE,IAHvB;AAKI,QAAA,KAAK,EAAEhB,cAAc,CAACiB,EAAf,KAAsBF,OAAO,CAACE,EAA9B,GAAmC,MAAnC,GAA4C;AALvD,SAAaC,YAAY,CAAC,CAAD,CAAzB;AAAA;AAAA;AAAA;AAAA,cADH,CALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADI,gBAqBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBR;AAwBH,CA7DD;;GAAMpB,G;;KAAAA,G;AA+DN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nrequire('dotenv').config()\n\nconst Map = ({ companies, clickedCompany }) => {\n\n    const [coordinates, setCoordinates] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    // useEffect(() => {\n    //     async function loadCoordinates() {\n    //         let coordsArr = [];\n    //         for (let company of companies) {\n    //             const location = company.address\n    //             await axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\n    //                 params:{\n    //                     address: location,\n    //                     key: process.env.REACT_APP_API_KEY\n    //                 }\n    //             })\n    //                 .then(function(response){\n    //                     let location = response.data.results[0].geometry.location\n    //                     let coordinates = [company.id.toString(), {lat: location.lat, lng: location.lng}]\n    //                     coordsArr.push(coordinates)      \n    //                 })\n    //                 .catch(function(error) {\n    //                     console.log(error)\n    //                 }) \n    //         }\n    //         setCoordinates(coordsArr);\n    //         setIsLoaded(true)\n    //     }\n    //     loadCoordinates();\n    // }, [companies]);\n\n    const location = {lat: 32.74544, lng: -117.14369}\n    const mapStyles = {\n        height: \"70vh\",\n        width: \"100%\"\n    }\n\n    return (\n        isLoaded  ?\n            <LoadScript\n                googleMapsApiKey= {process.env.REACT_APP_API_KEY}>\n            <GoogleMap\n                mapContainerStyle = { mapStyles }\n                zoom = { 13 }\n                center = { location } \n            >\n            {companies.map(company => (\n                <Marker key={companycoord[0]}\n                    label={company.coord[0]} \n                    position={company.coord[1]}\n                    labelInBackground={true}\n                    \n                    color={clickedCompany.id === company.id ? 'blue' : 'red'}\n                />\n                ))\n            })\n            </GoogleMap >\n            </LoadScript>\n            :\n            <p>Loading...</p>\n    )\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}