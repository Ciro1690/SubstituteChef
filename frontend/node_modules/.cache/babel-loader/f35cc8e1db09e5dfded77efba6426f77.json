{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/jobs/Applications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Applications = ({\n  userInfo\n}) => {\n  _s();\n\n  const [applications, setApplications] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    async function getApplications() {\n      const jobs = [];\n\n      for (let jobId of userInfo.applications) {\n        const job = await ChefApi.getJob(jobId);\n      }\n\n      console.log(userInfo.applications);\n      console.log(applications);\n      setIsLoaded(true);\n    }\n\n    getApplications();\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Current Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: applications.map(application => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: application\n      }, application, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Applications, \"JBYy3LVL07qkAFgP/FwxVwhVUS4=\");\n\n_c = Applications;\nexport default Applications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Applications\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/jobs/Applications.js"],"names":["React","useState","useEffect","ChefApi","Applications","userInfo","applications","setApplications","isLoaded","setIsLoaded","getApplications","jobs","jobId","job","getJob","console","log","map","application"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,eAAf,GAAiC;AAC7B,YAAMC,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,KAAT,IAAkBP,QAAQ,CAACC,YAA3B,EAAyC;AACrC,cAAMO,GAAG,GAAG,MAAMV,OAAO,CAACW,MAAR,CAAeF,KAAf,CAAlB;AAEH;;AACDG,MAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACC,YAArB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACDC,IAAAA,eAAe;AAClB,GAZQ,EAYN,CAACL,QAAD,CAZM,CAAT;AAcA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACG,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,GAAoC,IAFzC,eAGI;AAAA,gBACKF,YAAY,CAACW,GAAb,CAAiBC,WAAW,iBACzB;AAAA,kBAAuBA;AAAvB,SAASA,WAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7BD;;GAAMd,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChefApi from '../api/api';\n\nconst Applications = ({ userInfo }) => {\n    const [applications, setApplications] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        async function getApplications() {\n            const jobs = []\n            for (let jobId of userInfo.applications) {\n                const job = await ChefApi.getJob(jobId);\n\n            }\n            console.log(userInfo.applications)\n            console.log(applications)\n            setIsLoaded(true);\n        }\n        getApplications();\n    }, [userInfo]);\n\n    return (\n        <div>\n            <h1>Current Applications</h1>\n            {!isLoaded ? <div>Loading...</div> : null}\n            <ul>\n                {applications.map(application => (\n                    <li key={application}>{application}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Applications;"]},"metadata":{},"sourceType":"module"}