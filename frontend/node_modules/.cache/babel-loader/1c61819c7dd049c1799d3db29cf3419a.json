{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport testData from './RestaurantData';\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyList = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [clickedCompany, setClickedCompany] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getCompanyInfo = () => {\n    try {\n      setCompanies(testData);\n      setIsLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [!isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this) : null, isLoaded && companies.length > 0 ? companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n        company: company,\n        clickedCompany: clickedCompany,\n        setClickedCompany: setClickedRestaurant\n      }, company.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)) : getRestaurantInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        clickedRestaurant: clickedRestaurant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanyList, \"K1Ceyq4CRjtOCUEi2JNmTyXumkg=\");\n\n_c = CompanyList;\nexport default CompanyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/search/CompanyList.js"],"names":["React","useState","RestaurantCard","testData","Map","CompanyList","companies","setCompanies","clickedCompany","setClickedCompany","isLoaded","setIsLoaded","getCompanyInfo","err","console","log","length","map","company","setClickedRestaurant","id","getRestaurantInfo","clickedRestaurant"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,cAAc,GAAG,MAAM;AACzB,QAAI;AACAL,MAAAA,YAAY,CAACJ,QAAD,CAAZ;AACAQ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD,CAIA,OAAOE,GAAP,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACK,CAACH,QAAD,gBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,GAAoC,IADzC,EAEKA,QAAQ,IAAIJ,SAAS,CAACU,MAAV,GAAmB,CAA/B,GACDV,SAAS,CAACW,GAAV,CAAcC,OAAO,iBACjB,QAAC,WAAD;AAEI,QAAA,OAAO,EAAEA,OAFb;AAGI,QAAA,cAAc,EAAEV,cAHpB;AAII,QAAA,iBAAiB,EAAEW;AAJvB,SACSD,OAAO,CAACE,EADjB;AAAA;AAAA;AAAA;AAAA,cADJ,CADC,GASCC,iBAAiB,EAXvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,iBAAiB,EAAEC;AADvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCD;;GAAMjB,W;;KAAAA,W;AAyCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport testData from './RestaurantData';\nimport Map from './Map';\n\nconst CompanyList = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [clickedCompany, setClickedCompany] = useState({});\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const getCompanyInfo = () => {\n        try {\n            setCompanies(testData);\n            setIsLoaded(true);\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                {!isLoaded ? <div>Loading...</div> : null}\n                {isLoaded && companies.length > 0 ?\n                companies.map(company => (\n                    <CompanyCard\n                        key={company.id}\n                        company={company}\n                        clickedCompany={clickedCompany}\n                        setClickedCompany={setClickedRestaurant}\n                    />\n                )) \n                : getRestaurantInfo()\n                }\n            </div>\n            <div className=\"row\">\n                <Map \n                    clickedRestaurant={clickedRestaurant}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default CompanyList;"]},"metadata":{},"sourceType":"module"}