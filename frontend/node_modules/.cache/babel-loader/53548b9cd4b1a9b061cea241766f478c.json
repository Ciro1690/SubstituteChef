{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/CompanySignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Form, FormGroup, Button } from 'reactstrap';\nimport \"../../styles/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySignup = ({\n  CompanySignUp,\n  currentUser\n}) => {\n  _s();\n\n  const INITIAL_DATA = {\n    name: \"\",\n    url: \"\",\n    address: \"\"\n  };\n  const [formData, setFormData] = useState(INITIAL_DATA);\n  const [errors, setErrors] = useState([]);\n  let history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const registerData = {\n      \"name\": formData.name,\n      \"url\": formData.url,\n      \"address\": formData.address,\n      \"username\": currentUser\n    };\n    const result = await CompanySignUp(registerData);\n    setFormData(INITIAL_DATA);\n\n    if (result.success) {\n      history.push(\"/\");\n    } else {\n      setErrors(result.errors);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup a Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"name\",\n          children: \"Company Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleChange,\n          value: formData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"url\",\n          children: \"URL: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"url\",\n          onChange: handleChange,\n          value: formData.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"address\",\n          children: \"Address: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          onChange: handleChange,\n          value: formData.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CompanySignup, \"dzeZ+YxNQHoo5Fercmc6piMT3EU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CompanySignup;\nexport default CompanySignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySignup\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/companies/CompanySignup.js"],"names":["React","useState","useHistory","Form","FormGroup","Button","CompanySignup","CompanySignUp","currentUser","INITIAL_DATA","name","url","address","formData","setFormData","errors","setErrors","history","handleSubmit","e","preventDefault","registerData","result","success","push","handleChange","value","target","data","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n    Form,\n    FormGroup,\n    Button\n} from 'reactstrap'; \nimport \"../../styles/Register.css\"\n\nconst CompanySignup = ({ CompanySignUp, currentUser }) => {\n    const INITIAL_DATA = {\n        name: \"\",\n        url: \"\", \n        address: \"\"\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"name\": formData.name,\n            \"url\":formData.url,\n            \"address\": formData.address,\n            \"username\": currentUser           \n        };\n        const result = await CompanySignUp(registerData)\n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n            <h1>Signup a Company</h1>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <label id=\"name\">Company Name: </label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={handleChange}\n                        value={formData.name}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"url\">URL: </label>\n                    <input\n                        type=\"text\"\n                        name=\"url\"\n                        onChange={handleChange}\n                        value={formData.url}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"address\">Address: </label>\n                    <input\n                        type=\"text\"\n                        name=\"address\"\n                        onChange={handleChange}\n                        value={formData.address}\n                    />\n                </FormGroup>\n                <Button>Submit</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default CompanySignup;"]},"metadata":{},"sourceType":"module"}