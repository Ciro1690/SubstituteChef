{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/user/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { editUser } from '../utilities/utility';\nimport UserContext from '../routes/UserContext';\nimport { FormControl, FormGroup, Button } from '@material-ui/core'; // import {\n//     Form,\n//     FormGroup,\n//     Button\n// } from 'reactstrap'; \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = ({\n  setUserInfo\n}) => {\n  _s();\n\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const [formData, setFormData] = useState(null);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    if (userInfo !== null) {\n      setFormData({\n        firstName: userInfo.firstName,\n        lastName: userInfo.lastName,\n        email: userInfo.email,\n        isCompany: userInfo.isCompany\n      });\n    }\n  }, [userInfo]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"email\": formData.email,\n      \"isCompany\": formData.isCompany\n    };\n    await editUser(userInfo.username, editData).then(res => {\n      if (res.success) {\n        console.log('res', res);\n        const NEW_STATE = {\n          \"firstName\": res.user.firstName,\n          \"lastName\": res.user.lastName,\n          \"email\": res.user.email,\n          \"isCompany\": res.user.isCompany\n        };\n        setUserInfo(data => ({ ...data,\n          ...NEW_STATE\n        }));\n        alert(\"Updated user info\");\n      } else {\n        setErrors(res.errors);\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: formData === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"firstName\",\n            children: \"First Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            onChange: handleChange,\n            value: formData.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"lastName\",\n            children: \"Last Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            onChange: handleChange,\n            value: formData.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            value: formData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"isCompany\",\n            children: \"Are you a Business?: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"isCompany\",\n            onChange: handleChange,\n            value: formData.isCompany,\n            checked: !!formData.isCompany\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Edit Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/userapplications\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"View Applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProfile, \"cH7sdeYrvWTCkyL9db7aBzQKQVI=\");\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/user/UserProfile.js"],"names":["React","useState","useContext","useEffect","editUser","UserContext","FormControl","FormGroup","Button","UserProfile","setUserInfo","userInfo","formData","setFormData","errors","setErrors","firstName","lastName","email","isCompany","handleSubmit","e","preventDefault","editData","username","then","res","success","console","log","NEW_STATE","user","data","alert","handleChange","name","target","value","type","checked","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { editUser } from '../utilities/utility';\nimport UserContext from '../routes/UserContext';\nimport {\n    FormControl,\n    FormGroup,\n    Button\n} from '@material-ui/core';\n// import {\n//     Form,\n//     FormGroup,\n//     Button\n// } from 'reactstrap'; \n\nconst UserProfile = ({ setUserInfo }) => {\n\n    const { userInfo } = useContext(UserContext);\n\n    const [formData, setFormData] = useState(null);\n    const [errors, setErrors] = useState([]);\n    \n    useEffect(() => {\n        if (userInfo !== null) {\n            setFormData({\n                firstName: userInfo.firstName,\n                lastName: userInfo.lastName,\n                email: userInfo.email,\n                isCompany: userInfo.isCompany\n            });\n        }\n    }, [userInfo])\n    \n    const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n        \"firstName\": formData.firstName,\n        \"lastName\": formData.lastName,\n        \"email\": formData.email,\n        \"isCompany\": formData.isCompany            \n    };\n    await editUser(userInfo.username, editData)\n        .then((res) => {\n            if (res.success) {\n                console.log('res', res)\n                const NEW_STATE = {\n                    \"firstName\": res.user.firstName,\n                    \"lastName\": res.user.lastName,\n                    \"email\": res.user.email,\n                    \"isCompany\": res.user.isCompany\n                }\n                setUserInfo(data => ({\n                    ...data,\n                    ...NEW_STATE\n                }))\n                alert(\"Updated user info\")\n            }\n            else {\n                setErrors(res.errors);\n            }\n        })\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div>\n        {formData === null  ? <p>Loading...</p> :\n            <div>\n                <h1>User Profile</h1>\n                <FormControl onSubmit={handleSubmit}>\n                    <FormGroup>\n                        <label id=\"firstName\">First Name: </label>\n                        <input\n                            type=\"text\"\n                            name=\"firstName\"\n                            onChange={handleChange}\n                            value={formData.firstName}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"lastName\">Last Name: </label>\n                        <input\n                            type=\"text\"\n                            name=\"lastName\"\n                            onChange={handleChange}\n                            value={formData.lastName}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"email\">Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            value={formData.email}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"isCompany\">Are you a Business?: </label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"isCompany\"\n                            onChange={handleChange}\n                            value={formData.isCompany}\n                            checked={!!formData.isCompany}\n                        />\n                    </FormGroup>\n                    <Button>Edit Account</Button>\n                    <a href=\"/userapplications\"><Button>View Applications</Button></a>\n                    <div>\n                        {errors.length ?\n                            <p>{errors}</p>\n                            : null }\n                    </div>\n                </FormControl>\n            </div>\n        }\n        </div>\n    )\n}\n\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}