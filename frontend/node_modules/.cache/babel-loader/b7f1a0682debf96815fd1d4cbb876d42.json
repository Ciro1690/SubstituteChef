{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/UserSignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { FormControlLabel, TextField, Checkbox, Button } from '@material-ui/core';\nimport \"../../styles/Register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserSignup = ({\n  registerUser\n}) => {\n  _s();\n\n  const INITIAL_DATA = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  };\n  const [formData, setFormData] = useState(INITIAL_DATA);\n  const [errors, setErrors] = useState([]);\n  let history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const registerData = {\n      \"username\": formData.username,\n      \"password\": formData.password,\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"email\": formData.email\n    };\n    const result = await registerUser(registerData);\n    setFormData(INITIAL_DATA);\n\n    if (result.success) {\n      alert(\"Created account for Substitute Chef\");\n      history.push(\"/\");\n    } else {\n      setErrors(result.errors);\n    }\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Substitute Chef!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Username\",\n        type: \"text\",\n        name: \"username\",\n        onChange: handleChange,\n        value: formData.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        value: formData.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"First Name\",\n        type: \"text\",\n        name: \"firstName\",\n        onChange: handleChange,\n        value: formData.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Last Name\",\n        type: \"text\",\n        name: \"lastName\",\n        onChange: handleChange,\n        value: formData.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        onChange: handleChange,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: formData.isCompany,\n          checked: formData.isCompany,\n          onChange: handleChange,\n          name: \"isCompany\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }, this),\n        label: \"Register a Company?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserSignup, \"dzeZ+YxNQHoo5Fercmc6piMT3EU=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserSignup;\nexport default UserSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSignup\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/UserSignup.js"],"names":["React","useState","useHistory","FormControlLabel","TextField","Checkbox","Button","UserSignup","registerUser","INITIAL_DATA","username","password","firstName","lastName","email","formData","setFormData","errors","setErrors","history","handleSubmit","e","preventDefault","registerData","result","success","alert","push","handleChange","name","target","value","type","checked","data","isCompany","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport {\n    FormControlLabel,\n    TextField,\n    Checkbox,\n    Button\n} from '@material-ui/core'; \nimport \"../../styles/Register.css\"\n\nconst UserSignup = ({ registerUser }) => {\n    const INITIAL_DATA = {\n        username: \"\",\n        password: \"\", \n        firstName: \"\", \n        lastName: \"\", \n        email: \"\"\n    };\n\n    const [formData, setFormData] = useState(INITIAL_DATA);\n    const [errors, setErrors] = useState([]);\n    let history = useHistory();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const registerData = {\n            \"username\": formData.username,\n            \"password\":formData.password,\n            \"firstName\": formData.firstName,\n            \"lastName\": formData.lastName,\n            \"email\": formData.email\n        };\n        const result = await registerUser(registerData)\n        \n        setFormData(INITIAL_DATA);\n        \n        if (result.success) {\n            alert(\"Created account for Substitute Chef\")\n                history.push(\"/\");\n        } else {\n            setErrors(result.errors);\n        }\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <div className=\"register-div\">\n            <h1>Welcome to Substitute Chef!</h1>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    required\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={handleChange}\n                    value={formData.username}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={formData.password}/>\n                <br></br>\n                <TextField\n                    required\n                    label=\"First Name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    onChange={handleChange}\n                    value={formData.firstName}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    onChange={handleChange}\n                    value={formData.lastName}/>\n                    <br></br>\n                <TextField\n                    required\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={formData.email}/>\n                    <br></br>\n                <FormControlLabel\n                    control={<Checkbox value={formData.isCompany} checked={formData.isCompany} onChange={handleChange} name=\"isCompany\" />}\n                    label=\"Register a Company?\"/><br></br>\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\" \n                    color=\"primary\">Login</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                    : null }\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default UserSignup;"]},"metadata":{},"sourceType":"module"}