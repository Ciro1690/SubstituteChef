{"ast":null,"code":"var _jsxFileName = \"/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { editUser } from '../utilities/utility';\nimport UserContext from '../routes/UserContext';\nimport { Form, FormGroup, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  companies,\n  setUserInfo\n}) => {\n  _s();\n\n  const {\n    userInfo\n  } = useContext(UserContext);\n  console.log(companies);\n  const INITIAL_STATE = {\n    firstName: userInfo.firstName,\n    lastName: userInfo.lastName,\n    email: userInfo.email,\n    isCompany: userInfo.isCompany\n  };\n  const [formData, setFormData] = useState(INITIAL_STATE);\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"email\": formData.email,\n      \"isCompany\": formData.isCompany\n    };\n    await editUser(userInfo.username, editData).then(res => {\n      if (res.success) {\n        console.log('res', res);\n        const NEW_STATE = {\n          \"firstName\": res.user.firstName,\n          \"lastName\": res.user.lastName,\n          \"email\": res.user.email,\n          \"isCompany\": res.user.isCompany\n        };\n        setUserInfo(data => ({ ...data,\n          ...NEW_STATE\n        }));\n        alert(\"Updated user info\");\n      } else {\n        setErrors(res.errors);\n      }\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"firstName\",\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          onChange: handleChange,\n          value: formData.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"lastName\",\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          onChange: handleChange,\n          value: formData.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          value: formData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"isCompany\",\n          children: \"Are you a Business?: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"isCompany\",\n          onChange: handleChange,\n          value: formData.isCompany,\n          checked: !!formData.isCompany\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Edit Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/applications\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"View Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), companies.companies.map(company => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"key=\", company.id, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: company.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: company.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true);\n};\n\n_s(Profile, \"wvBBZORbBDG6R+zhkdKD8fzzLBM=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/cheers/Desktop/Coding/Springboard/substitute-chef/frontend/src/components/auth/Profile.js"],"names":["React","useState","useContext","editUser","UserContext","Form","FormGroup","Button","Profile","companies","setUserInfo","userInfo","console","log","INITIAL_STATE","firstName","lastName","email","isCompany","formData","setFormData","errors","setErrors","handleSubmit","e","preventDefault","editData","username","then","res","success","NEW_STATE","user","data","alert","handleChange","name","target","value","type","checked","length","map","company","id","url","address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SACIC,IADJ,EAEIC,SAFJ,EAGIC,MAHJ,QAIO,YAJP;;;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAgC;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACE,WAAD,CAA/B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,QAAMK,aAAa,GAAG;AAClBC,IAAAA,SAAS,EAAEJ,QAAQ,CAACI,SADF;AAElBC,IAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAFD;AAGlBC,IAAAA,KAAK,EAAEN,QAAQ,CAACM,KAHE;AAIlBC,IAAAA,SAAS,EAAEP,QAAQ,CAACO;AAJF,GAAtB;AAOA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACa,aAAD,CAAxC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMsB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG;AACb,mBAAaP,QAAQ,CAACJ,SADT;AAEb,kBAAYI,QAAQ,CAACH,QAFR;AAGb,eAASG,QAAQ,CAACF,KAHL;AAIb,mBAAaE,QAAQ,CAACD;AAJT,KAAjB;AAMA,UAAMf,QAAQ,CAACQ,QAAQ,CAACgB,QAAV,EAAoBD,QAApB,CAAR,CACDE,IADC,CACKC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,OAAR,EAAiB;AACblB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBgB,GAAnB;AACA,cAAME,SAAS,GAAG;AACd,uBAAaF,GAAG,CAACG,IAAJ,CAASjB,SADR;AAEd,sBAAYc,GAAG,CAACG,IAAJ,CAAShB,QAFP;AAGd,mBAASa,GAAG,CAACG,IAAJ,CAASf,KAHJ;AAId,uBAAaY,GAAG,CAACG,IAAJ,CAASd;AAJR,SAAlB;AAMAR,QAAAA,WAAW,CAACuB,IAAI,KAAK,EACjB,GAAGA,IADc;AAEjB,aAAGF;AAFc,SAAL,CAAL,CAAX;AAIAG,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,OAbD,MAcK;AACDZ,QAAAA,SAAS,CAACO,GAAG,CAACR,MAAL,CAAT;AACH;AACJ,KAnBC,CAAN;AAoBC,GA5BD;;AA8BA,QAAMc,YAAY,GAAGX,CAAC,IAAI;AACtB,UAAMY,IAAI,GAAGZ,CAAC,CAACa,MAAF,CAASD,IAAtB;AACA,UAAME,KAAK,GAAGd,CAAC,CAACa,MAAF,CAASE,IAAT,KAAkB,UAAlB,GAA+Bf,CAAC,CAACa,MAAF,CAASG,OAAxC,GAAkDhB,CAAC,CAACa,MAAF,CAASC,KAAzE;AACAlB,IAAAA,WAAW,CAACa,IAAI,KAAK,EACjB,GAAGA,IADc;AAEjB,OAACG,IAAD,GAAQE;AAFS,KAAL,CAAL,CAAX;AAIH,GAPD;;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEf,YAAhB;AAAA,8BACI,QAAC,SAAD;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,WAFT;AAGI,UAAA,QAAQ,EAAEY,YAHd;AAII,UAAA,KAAK,EAAEhB,QAAQ,CAACJ;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,QAAQ,EAAEoB,YAHd;AAII,UAAA,KAAK,EAAEhB,QAAQ,CAACH;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAmBI,QAAC,SAAD;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,QAAQ,EAAEmB,YAHd;AAII,UAAA,KAAK,EAAEhB,QAAQ,CAACF;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eA4BI,QAAC,SAAD;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,IAAI,EAAC,WAFT;AAGI,UAAA,QAAQ,EAAEkB,YAHd;AAII,UAAA,KAAK,EAAEhB,QAAQ,CAACD,SAJpB;AAKI,UAAA,OAAO,EAAE,CAAC,CAACC,QAAQ,CAACD;AALxB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAsCI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ,eAuCI;AAAA,kBACKG,MAAM,CAACoB,MAAP,gBACG;AAAA,oBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADH,GAEK;AAHV;AAAA;AAAA;AAAA;AAAA,cAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eA+CI;AAAG,MAAA,IAAI,EAAC,eAAR;AAAA,6BAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,YA/CJ,eAgDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDJ,EAiDKZ,SAAS,CAACA,SAAV,CAAoBiC,GAApB,CAAwBC,OAAO,iBAC5B;AAAA,yBACSA,OAAO,CAACC,EADjB,eAEI;AAAA,kBAAKD,OAAO,CAACP;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKO,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,oBADH,CAjDL;AAAA,kBADJ;AA4DH,CAlHD;;GAAMtC,O;;KAAAA,O;AAoHN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { editUser } from '../utilities/utility';\nimport UserContext from '../routes/UserContext';\nimport {\n    Form,\n    FormGroup,\n    Button\n} from 'reactstrap'; \n\nconst Profile = ({ companies, setUserInfo }) => {\n    const { userInfo } = useContext(UserContext);\n    console.log(companies)\n\n    const INITIAL_STATE = {\n        firstName: userInfo.firstName,\n        lastName: userInfo.lastName,\n        email: userInfo.email,\n        isCompany: userInfo.isCompany\n    };\n\n    const [formData, setFormData] = useState(INITIAL_STATE);\n    const [errors, setErrors] = useState([]);\n\n\n    const handleSubmit = async e => {\n    e.preventDefault();\n    const editData = {\n        \"firstName\": formData.firstName,\n        \"lastName\": formData.lastName,\n        \"email\": formData.email,\n        \"isCompany\": formData.isCompany            \n    };\n    await editUser(userInfo.username, editData)\n        .then((res) => {\n            if (res.success) {\n                console.log('res', res)\n                const NEW_STATE = {\n                    \"firstName\": res.user.firstName,\n                    \"lastName\": res.user.lastName,\n                    \"email\": res.user.email,\n                    \"isCompany\": res.user.isCompany\n                }\n                setUserInfo(data => ({\n                    ...data,\n                    ...NEW_STATE\n                }))\n                alert(\"Updated user info\")\n            }\n            else {\n                setErrors(res.errors);\n            }\n        })\n    }\n\n    const handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n        setFormData(data => ({\n            ...data,\n            [name]: value\n        }))\n    }\n\n    return (\n        <>\n            <h1>User Profile</h1>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <label id=\"firstName\">First Name: </label>\n                    <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        onChange={handleChange}\n                        value={formData.firstName}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"lastName\">Last Name: </label>\n                    <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        onChange={handleChange}\n                        value={formData.lastName}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"email\">Email:</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        value={formData.email}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <label id=\"isCompany\">Are you a Business?: </label>\n                    <input\n                        type=\"checkbox\"\n                        name=\"isCompany\"\n                        onChange={handleChange}\n                        value={formData.isCompany}\n                        checked={!!formData.isCompany}\n                    />\n                </FormGroup>\n                <Button>Edit Account</Button>\n                <div>\n                    {errors.length ?\n                        <p>{errors}</p>\n                        : null }\n                </div>\n            </Form>\n            <a href=\"/applications\"><Button>View Applications</Button></a>\n            <h1>Company Profile</h1>\n            {companies.companies.map(company => (\n                <>\n                    key={company.id}\n                    <h1>{company.name}</h1>\n                    <h1>{company.url}</h1>\n                    <h1>{company.address}</h1>\n                </>\n            ))}\n        </>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}